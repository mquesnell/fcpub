{"version":3,"sources":["Palettes/GreenPalette.js","Palettes/TealPalette.js","Palettes/DarkPalette.js","Palettes/GrayPalette.js","Palettes/BluePalette.js","GenerateTheme.js","Themes.js","Days.js","FindCountHeader.jsx","HeaderDay.jsx","Header.jsx","DayCell.jsx","Week.jsx","dates.js","ComposeWeeks.js","SummaryCard.jsx","Grid7.jsx","FindGrid.jsx","GetData.js","useCustomTheme.js","Geoloc.js","SunTimes.js","GCLinks.js","DayDetail.jsx","NextWeek.jsx","App.js","index.js"],"names":["GreenPalette","name","primary","light","main","dark","headerText","background","default","Green","find","noneReq","someReq","Red","today","border","Orange","number","Gray","day","normBkgnd","altBkgnd","Yellow","altNumber","summary","text","type","TealPalette","DarkPalette","GrayPalette","altNoneReq","altSomeReq","BluePalette","generateTheme","newPalette","createMuiTheme","palette","Themes","Blue","Teal","Dark","ThemeArray","Object","keys","map","key","DayChoices","useDays","defaultDays","useState","days","setInternalDays","useEffect","d","window","localStorage","getItem","setItem","setDaysAndStore","withTheme","props","small","useMediaQuery","theme","breakpoints","down","titleText","classes","makeStyles","flex","color","spacer","height","formControl","paddingRight","paddingLeft","selectText","nextText","barText","icon","weekIcon","cursor","useStyles","AppBar","position","Toolbar","Typography","className","onClick","handleWeek","FormControl","Select","disableUnderline","root","labelId","id","value","onChange","changeDays","MenuItem","changeTheme","th","dayRoot","textAlign","HeaderDay","headerRoot","display","flexWrap","justifyContent","alignItems","cell","borderStyle","borderWidth","borderColor","backgroundColor","paddingTop","paddingBottom","Header","values","Grid","item","container","xs","getHeaderCell","subtext","status","monthFlag","normalBkgnd","normalNumClr","someReqNormClr","noneReqNormClr","colors","unused","numberColor","findColor","ok","low","cellRoot","flexDirection","up","cellNumber","cellText","cellSubText","finds","checkPad","sm","md","variant","fontSize","Week","dayOnClick","weekRoot","commonBorder","rawDate","offset","index","styleName","Math","random","getDayCell","DateTime","require","getDates","startDate","counts","result","dates","goal","dateIndex","startIdx","num","parseInt","isNaN","len","length","dayNames","names","year","Date","getFullYear","toString","startDoW","getDay","i","push","getDayNames","dayname","getNDays","date","month","getMonth","getDate","padStart","getFormattedDate","getReqFindsNextWeek","findCount","getDayOfMonth","dayString","substring","parsed","getShortMonthName","getMonthName","short","monthNames","long","getLongDateText","getWeeks","data","weeks","slice","convertDaysToWeeks","currentDoW","currentDoM","createUnusedDay","j","createDayObject","numToPad","k","first","getDays","dom","df","borderRadius","box","zeroReq","moreThanZero","summaryFigs","SummaryCard","info","generated","next7days","Card","CardContent","Box","g7root","flexGrow","padding","Grid7","weekNum","spacing","week","FindGrid","direction","getDateIndex","getTotalFinds","getLabFinds","labs","getNormalFinds","getGoal","useCustomTheme","defaultTheme","setInternalTheme","componentMounted","setComponentMounted","localThemeName","customTheme","getFormattedGeoLoc","pos","lat","latitude","convertToDegMinutes","lon","longitude","dd","deg","min","abs","toFixed","getLocaleTime","t","toLocaleTimeString","getGCSearchURL","loc","origin","replace","getGCBrowseMapURL","ll","geo","DayDetail","onClose","selectedValue","open","sunTimes","isLoaded","setIsLoaded","weather","setWeather","qDT","local","plus","toFormat","numToFind","f","gd","location","url","axios","get","then","response","content","minWidth","closeButton","right","top","paper","apilink","numtofind","gclinksdiv","gclink","weatherFact","sun","suntime","handleClose","getCurrentWeather","currentTemp","current","temp_f","feelslike_f","currentIcon","condition","currentWind","wind_mph","gust_mph","src","alt","isForecastAvailable","forecast","forecastday","getForecastWeather","temps","maxtemp_f","mintemp_f","hour","getHours","forecastHour","precipChance","daily_chance_of_rain","snowChance","daily_chance_of_snow","maxWind","maxwind_mph","uv","getSunTimes","sunrise","sunset","astro","results","st","getSunAPILink","linkHref","linkText","Link","href","target","rel","underline","Dialog","DialogTitle","IconButton","Paper","elevation","gc","getGeolocItems","gridRoot","weekGrid","dayCell","dayText","findText","findZero","dayPaper","getDayHeader","width","dayName","dayNum","findStyles","noWrap","getSummaryInfo","App","setTheme","setDays","setOpen","setSelectedValue","toDoOpen","setToDoOpen","toDoWeek","setToDoWeek","clickedDate","setClickedDate","setPosition","setSunTimes","findData","creationTime","toLocaleString","getFindCountData","navigator","geolocation","getCurrentPosition","coords","CssBaseline","event","dayOfWeek","weekday","minus","getCurrentWeek","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f46ad9ee.chunk.js","sourcesContent":["/** @format */\n\n// contains the green palette values\nimport Green from \"@material-ui/core/colors/green\";\nimport Red from \"@material-ui/core/colors/red\";\nimport Yellow from \"@material-ui/core/colors/yellow\";\nimport Gray from \"@material-ui/core/colors/grey\";\nimport Orange from \"@material-ui/core/colors/orange\";\n\nconst GreenPalette = {\n  name: \"Green\",\n  primary: {\n    light: \"#6abf69\",\n    main: \"#388e3c\",\n    dark: \"#00600f\",\n    headerText: \"#fff\",\n  },\n  background: {\n    default: Green[100],\n  },\n  find: {\n    noneReq: Green[400],\n    someReq: Red[500],\n  },\n  today: {\n    border: Green[700],\n    background: Orange[200],\n    number: Gray[500],\n  },\n  day: {\n    normBkgnd: \"white\",\n    altBkgnd: Yellow[50],\n    number: Gray[500],\n    altNumber: Gray[500],\n  },\n  summary: {\n    text: \"rgba(0, 0, 0, 0.87)\",\n    background: \"#white\",\n  },\n  type: \"light\",\n};\n\nexport default GreenPalette;\n","/** @format */\n\n// contains the teal palette values\nimport Green from \"@material-ui/core/colors/green\";\nimport Red from \"@material-ui/core/colors/red\";\nimport Gray from \"@material-ui/core/colors/grey\";\n\nconst TealPalette = {\n  name: \"Teal\",\n  primary: {\n    light: \"#52c7b8\",\n    main: \"#009688\",\n    dark: \"#00675b\",\n    headerText: \"#fff\",\n  },\n  background: {\n    default: \"#b2dfdb\",\n  },\n  find: {\n    noneReq: Green[400],\n    someReq: Red[500],\n  },\n  today: {\n    border: \"#009688\",\n    background: \"white\",\n    number: Gray[500],\n  },\n  day: {\n    normBkgnd: \"white\",\n    altBkgnd: \"#fce4ec\",\n    // altBkgnd: Yellow[50],\n    number: Gray[500],\n    altNumber: Gray[500],\n  },\n  summary: {\n    text: \"rgba(0, 0, 0, 0.87)\",\n    background: \"#white\",\n  },\n  type: \"light\",\n};\n\nexport default TealPalette;\n","/** @format */\n\n// contains the teal palette values\nimport Green from \"@material-ui/core/colors/green\";\nimport Gray from \"@material-ui/core/colors/grey\";\n\nconst DarkPalette = {\n  name: \"Dark\",\n  primary: {\n    light: \"#484848\",\n    main: \"#000a12\",\n    dark: \"#000000\",\n    headerText: \"#fff\",\n  },\n  background: {\n    default: \"#263238\",\n  },\n  find: {\n    noneReq: Green[400],\n    // someReq: \"#039be5\",\n    someReq: \"#fff59d\",\n  },\n  today: {\n    border: \"#eceff1\",\n    background: \"#819ca9\",\n    number: \"#eceff1\",\n  },\n  day: {\n    normBkgnd: \"#4f5b62\",\n    altBkgnd: \"#718792\",\n    number: Gray[500],\n    altNumber: \"black\",\n  },\n  summary: {\n    text: \"#eceff1\",\n    background: \"#4f5b62\",\n  },\n  type: \"dark\",\n};\n\nexport default DarkPalette;\n","/** @format */\n\n// contains the green palette values\nimport Gray from \"@material-ui/core/colors/grey\";\nimport Orange from \"@material-ui/core/colors/orange\";\n\nconst GrayPalette = {\n  name: \"Gray\",\n  primary: {\n    light: \"#6abf69\",\n    main: \"#3c3c3c\",\n    dark: \"#00600f\",\n    headerText: \"#8a8a8a\",\n  },\n  background: {\n    default: \"#1e1e1e\",\n  },\n  find: {\n    noneReq: Gray[500],\n    someReq: \"#e65100\",\n    altNoneReq: Gray[300],\n    altSomeReq: \"#3c3c3c\",\n  },\n  today: {\n    border: Orange[400],\n    background: \"#5c5c5c\",\n    number: Gray[500],\n  },\n  day: {\n    normBkgnd: \"#5c5c5c\",\n    altBkgnd: Orange[400],\n    number: Gray[500],\n    altNumber: Gray[900],\n  },\n  summary: {\n    text: \"#8a8a8a\",\n    background: \"#3c3c3c\",\n  },\n  type: \"dark\",\n};\n\nexport default GrayPalette;\n","/** @format */\n\n// contains the green palette values\nimport Gray from \"@material-ui/core/colors/grey\";\n\nconst BluePalette = {\n  name: \"Blue\",\n  primary: {\n    light: \"#6abf69\",\n    main: \"#3f51b5\",\n    dark: \"#00600f\",\n    headerText: \"#76ff03\",\n  },\n  background: {\n    default: \"#3e3e3e\",\n  },\n  find: {\n    noneReq: Gray[600],\n    someReq: \"#b0ff57\",\n    altNoneReq: Gray[500],\n    altSomeReq: \"#3c3c3c\",\n  },\n  today: {\n    border: \"#b2ff59\",\n    background: \"#aab6fe\",\n    number: Gray[800],\n  },\n  day: {\n    normBkgnd: \"#aab6fe\",\n    altBkgnd: \"#b2ff59\",\n    number: Gray[800],\n    altNumber: Gray[900],\n  },\n  summary: {\n    text: \"#1a1a1a\",\n    background: \"#909090\",\n  },\n  type: \"dark\",\n};\n\nexport default BluePalette;\n","/** @format */\n\n// contains the code to generate the custom theme\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// creates a custom theme using the properties of the given palette\nexport function generateTheme(newPalette) {\n  const theme = createMuiTheme({\n    palette: { ...newPalette },\n  });\n\n  return theme;\n}\n","/** @format */\n\n// convenience file for palette access\n\nimport GreenPalette from \"./Palettes/GreenPalette\";\nimport TealPalette from \"./Palettes/TealPalette\";\nimport DarkPalette from \"./Palettes/DarkPalette\";\nimport GrayPalette from \"./Palettes/GrayPalette\";\nimport BluePalette from \"./Palettes/BluePalette\";\n\nimport { generateTheme } from \"./GenerateTheme\";\n\n// all available themes\nexport const Themes = {\n  Blue: generateTheme(BluePalette),\n  Green: generateTheme(GreenPalette),\n  Teal: generateTheme(TealPalette),\n  Dark: generateTheme(DarkPalette),\n  Gray: generateTheme(GrayPalette),\n};\n\n// the array of theme names\nexport const ThemeNames = Object.keys(Themes).map(\n  (key) => Themes[key].palette.name\n);\n\n// themes as an array\nexport const ThemeArray = Object.keys(Themes).map((key) => Themes[key]);\n\nexport default Themes;\n","/** @format */\n\nimport { useEffect, useState } from \"react\";\n\n// list of the number of days that can be used to fill the grid\nexport const DayChoices = [\n  7,\n  14, // default\n  21,\n  30,\n];\n\n// implements a hook to set the days to be displayed and indicate when it\n// is loaded at startup.\n//\n// Based on code from:\n// https://css-tricks.com/a-dark-mode-toggle-with-react-and-themeprovider/\n\nexport const useDays = (defaultDays) => {\n  const [days, setInternalDays] = useState(defaultDays);\n\n  const setDaysAndStore = (d) => {\n    window.localStorage.setItem(\"days\", d);\n    setInternalDays(d);\n  };\n\n  const setDays = (d) => {\n    setDaysAndStore(d);\n  };\n\n  useEffect(() => {\n    const d = window.localStorage.getItem(\"days\");\n\n    if (d) {\n      setInternalDays(d);\n    }\n  }, []);\n\n  return [days, setDays];\n};\n","/** @format */\n\nimport React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, withTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { ThemeArray } from \"./Themes\";\nimport PaletteIcon from \"@material-ui/icons/Palette\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { DayChoices } from \"./Days\";\nimport ViewWeekRoundedIcon from \"@material-ui/icons/ViewWeekRounded\";\n\nconst FindCountHeader = (props) => {\n  const small = useMediaQuery(props.theme.breakpoints.down(\"sm\"));\n  const titleText = small ? \"Finds\" : \"Cache Find Counts\";\n\n  const useStyles = makeStyles(() => ({\n    text: {\n      flex: 1,\n      color: props.theme.palette.primary.headerText,\n    },\n    spacer: {\n      height: \"10px\",\n    },\n    formControl: {\n      paddingRight: \"10px\",\n      paddingLeft: \"5px\",\n    },\n    selectText: {\n      color: props.theme.palette.primary.headerText,\n    },\n    nextText: {\n      color: props.theme.palette.primary.headerText,\n\n      paddingLeft: \"7px\",\n      paddingRight: \"7px\",\n    },\n    barText: {\n      color: props.theme.palette.primary.headerText,\n\n      paddingLeft: \"5px\",\n      paddingRight: \"15px\",\n    },\n    icon: {\n      color: props.theme.palette.primary.headerText,\n    },\n    weekIcon: {\n      paddingRight: \"10px\",\n      cursor: \"pointer\",\n    },\n  }));\n  const classes = useStyles();\n\n  const nextText = () => {\n    if (small) {\n      return \"\";\n    }\n\n    return <Typography className={classes.nextText}>Next:</Typography>;\n  };\n\n  return (\n    <>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography className={classes.text}>{titleText}</Typography>\n          <ViewWeekRoundedIcon\n            className={`${classes.icon} ${classes.weekIcon}`}\n            onClick={() => {\n              props.handleWeek();\n            }}\n          />\n          <Typography className={classes.barText}>|</Typography>\n\n          <DateRangeIcon className={classes.icon} />\n          {nextText()}\n          <FormControl className={classes.formControl}>\n            <Select\n              disableUnderline\n              classes={{ icon: classes.selectText, root: classes.selectText }}\n              labelId=\"rangeLabel\"\n              id=\"rangeSelect\"\n              value={props.days}\n              onChange={props.changeDays}>\n              {DayChoices.map((d) => {\n                return (\n                  <MenuItem key={d} value={d}>\n                    {`${d} days`}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n          <Typography className={classes.barText}>|</Typography>\n          <PaletteIcon className={classes.icon} />\n          <FormControl className={classes.formControl}>\n            <Select\n              disableUnderline\n              classes={{ icon: classes.selectText, root: classes.selectText }}\n              labelId=\"themeLabel\"\n              id=\"themeSelect\"\n              value={props.theme}\n              onChange={props.changeTheme}>\n              {ThemeArray.map((th) => {\n                return (\n                  <MenuItem key={th.palette.name} value={th}>\n                    {th.palette.name}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.spacer}></div>\n    </>\n  );\n};\n\nexport default withTheme(FindCountHeader);\n","/** @format */\n\n// Implements the individual cells in the header row\n\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  dayRoot: {\n    textAlign: \"center\",\n    color: theme.palette.primary.headerText,\n  },\n}));\n\n// expects a property named text containing a string to place in the cell\nconst HeaderDay = (props) => {\n  const classes = useStyles();\n  const { text } = props;\n\n  return (\n    <>\n      <Typography className={classes.dayRoot}>{text}</Typography>\n    </>\n  );\n};\n\nexport default HeaderDay;\n","/** @format */\n\n// implements the header of Grid7, consisting of 7 HeaderDay cells\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport HeaderDay from \"./HeaderDay\";\n\nconst useStyles = makeStyles((theme) => ({\n  headerRoot: {\n    display: \"flex\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  cell: {\n    borderStyle: \"solid\",\n    borderWidth: \"2px\",\n    borderColor: theme.palette.background.default,\n    backgroundColor: theme.palette.primary.main,\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n  },\n}));\n\n// expects a property named values that is an array containing\n// seven day header values\nconst Header = (props) => {\n  const classes = useStyles();\n  const { values } = props;\n\n  const getHeaderCell = (value) => {\n    return (\n      <Grid item className={classes.cell} key={value} xs={12}>\n        <HeaderDay text={value} />\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <Grid item container className={classes.headerRoot}>\n        {values.map((value) => getHeaderCell(value))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Header;\n","/** @format */\n\n// implements the invidual days in a row\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, withTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\n// expects the following properties:\n//   number: the number of the date\n//   text: the main text to be displayed\n//   subtext: smaller text to be displayed\n//   status: unused|ok|low\n//   today: boolean indicating whether this date is today\n//   monthFlag: boolean indicating whether this cell should be the\n//              primary month color or the alternative month color\nconst DayCell = (props) => {\n  const { number, text, subtext, status, today, monthFlag } = props.value;\n  const theme = props.theme;\n\n  let normalBkgnd = theme.palette.day.normBkgnd;\n  let normalNumClr = theme.palette.day.number;\n  let someReqNormClr = theme.palette.find.someReq;\n  let noneReqNormClr = theme.palette.find.noneReq;\n\n  if (monthFlag) {\n    normalBkgnd = theme.palette.day.altBkgnd;\n    normalNumClr = theme.palette.day.altNumber;\n\n    if (theme.palette.find.altNoneReq) {\n      noneReqNormClr = theme.palette.find.altNoneReq;\n    }\n\n    if (theme.palette.find.altSomeReq) {\n      someReqNormClr = theme.palette.find.altSomeReq;\n    }\n  }\n\n  const colors = {\n    unused: {\n      backgroundColor: theme.palette.background.default,\n      numberColor: theme.palette.background.default,\n      findColor: theme.palette.background.default,\n    },\n    ok: {\n      backgroundColor: normalBkgnd,\n      numberColor: normalNumClr,\n      findColor: noneReqNormClr,\n    },\n    low: {\n      backgroundColor: normalBkgnd,\n      numberColor: normalNumClr,\n      findColor: someReqNormClr,\n    },\n    today: {\n      backgroundColor: theme.palette.today.background,\n      numberColor: theme.palette.today.number,\n    },\n  };\n\n  let backgroundColor = colors.today.backgroundColor;\n  let numberColor = colors.today.numberColor;\n\n  if (!today) {\n    backgroundColor = colors[status].backgroundColor;\n    numberColor = colors[status].numberColor;\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    cellRoot: {\n      display: \"flex\",\n      backgroundColor: backgroundColor,\n      height: \"100px\",\n      [theme.breakpoints.down(\"sm\")]: { flexDirection: \"column\" },\n      [theme.breakpoints.down(\"sm\")]: { justifyContent: \"space-between\" },\n      [theme.breakpoints.up(\"md\")]: { flexDirection: \"row\" },\n      cursor: \"pointer\",\n    },\n    cellNumber: {\n      color: numberColor,\n      paddingLeft: \"4px\",\n    },\n    cellText: {},\n    cellSubText: {},\n    finds: {\n      color: colors[status].findColor,\n      [theme.breakpoints.up(\"md\")]: { paddingTop: \"15px\" },\n      [theme.breakpoints.down(\"sm\")]: { paddingLeft: \"7px\" },\n      textAlign: \"center\",\n      justifyContent: \"center\",\n      alignContent: \"center\",\n    },\n    checkPad: {\n      [theme.breakpoints.up(\"md\")]: { paddingTop: \"10px\" },\n    },\n  }));\n\n  const classes = useStyles();\n\n  const getFindContent = () => {\n    if (status === \"ok\") {\n      return (\n        <>\n          <div className={classes.checkPad}></div>\n          <CheckIcon fontSize=\"large\" />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Typography variant=\"h4\" className={classes.cellText}>\n            {text}\n          </Typography>\n          <Typography variant=\"subtitle2\" className={classes.cellSubText}>\n            {subtext}\n          </Typography>\n        </>\n      );\n    }\n  };\n\n  return (\n    <>\n      <Grid item container className={classes.cellRoot}>\n        <Grid item sm={12} md={4}>\n          <Typography variant=\"subtitle1\" className={classes.cellNumber}>\n            {number}\n          </Typography>\n        </Grid>\n        <Grid item className={classes.finds} sm={12} md={8}>\n          {getFindContent()}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default withTheme(DayCell);\n","/** @format */\n\n// implements a week of days (7)\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DayCell from \"./DayCell\";\n\n// expects a property named values that is an array containing\n// the values for each of the seven days:\n// values: [\n//    { number: '1', text: '12', subtext: 'Finds', status:'empty|used' },\n//    ...,\n// ]\nconst Week = (props) => {\n  const { values, dayOnClick } = props;\n\n  const useStyles = makeStyles((theme) => ({\n    weekRoot: {\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n    day: {\n      borderColor: theme.palette.background.default,\n    },\n    today: {\n      borderColor: theme.palette.today.border,\n    },\n    unused: {\n      borderColor: theme.palette.background.default,\n    },\n    commonBorder: {\n      borderStyle: \"solid\",\n      borderWidth: \"3px\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  const getDayCell = (value) => {\n    const { status, today, rawDate, index } = value;\n    const cell = {\n      day: rawDate,\n      offset: index,\n      today: today,\n    };\n\n    let styleName = today ? classes.today : classes.day;\n    if (status === \"unused\") {\n      styleName = classes.unused;\n    }\n\n    return (\n      <Grid\n        item\n        className={`${classes.commonBorder} ${styleName}`}\n        key={Math.random()}\n        xs={12}\n        onClick={() => {\n          dayOnClick(cell);\n        }}>\n        <DayCell value={value} key={Math.random()} />\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <Grid item container className={classes.weekRoot}>\n        {values.map((value) => getDayCell(value))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Week;\n","/** @format */\n\nconst { DateTime } = require(\"luxon\");\n\n//\n// Various date support functions\n//\n\n// creates a date string in the format MM-DD\n// does not error check the input\nexport function buildDate(month, day) {\n  const date =\n    month.toString().padStart(2, \"0\") + \"-\" + day.toString().padStart(2, \"0\");\n  return date;\n}\n\n// returns a string containing the given date in the format MM-DD\nexport function getFormattedDate(date) {\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  return buildDate(month, day);\n}\n\n// returns todays date in the format MM-DD\nexport function getToday() {\n  const today = new Date();\n  return getFormattedDate(today);\n}\n\n// returns the current hour as an integer: 0-23\nexport function getCurrentHour() {\n  const now = new Date();\n  return now.getHours();\n}\n\n// Returns the given number of days, beginning with the given start date. If startDate\n// or number is not valid, an empty array is returned.  The maximum number of dates\n// returned is the complete array (366)\nexport function getDates(startDate, number, counts) {\n  let result = {\n    startDate: startDate,\n    number: number,\n    status: \"fail\",\n    dates: [],\n    goal: 0,\n  };\n\n  if (startDate in counts.dateIndex) {\n    // get the index of the starting day\n    const startIdx = counts.dateIndex[startDate];\n\n    // parse the number\n    let num = parseInt(number, 10);\n\n    if (!isNaN(num)) {\n      const len = counts.dates.length;\n\n      if (num > len) {\n        num = len;\n        result.number = num;\n      }\n\n      // get the names of the days\n      const dayNames = getDayNames(startDate, result.number);\n\n      // valid count, so fill the array\n      for (let i = 0; i < num; i++) {\n        const index = (i + startIdx) % len;\n\n        const d = counts.dates[index];\n        d.dayname = dayNames[i];\n\n        result.dates.push(counts.dates[index]);\n      }\n      result.goal = counts.goal;\n      result.status = \"ok\";\n    }\n  }\n\n  return result;\n}\n\n// Convenience function that returns the next 14 days\nexport function get14Days(counts) {\n  return getNDays(14, counts);\n}\n\n// Convenience function that returns the next num days\nexport function getNDays(num, counts) {\n  return getDates(getToday(), num, counts);\n}\n\n// Returns an array of strings containing the names of the\n// next <number> days, beginning with the given start date\n// in the current year.\n// startDate: date in the form MM-DD\n// number: integer number of days\nexport function getDayNames(startDate, number) {\n  const names = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  let result = [];\n\n  // get the starting day in this year\n  const year = new Date().getFullYear().toString();\n  const sd = new Date(startDate + \"-\" + year);\n  const startDoW = sd.getDay();\n\n  for (let i = 0; i < number; i++) {\n    let index = (startDoW + i) % names.length;\n    result.push(names[index]);\n  }\n\n  return result;\n}\n\n// returns the number of finds required in the next 7 days\n// dates: array of dates with findcounts, if length is less than 7,\n//        zero is returned.\n// goal: the desired minimum number of finds in the next 7 days,\n//       must be greater than zero\nexport function getReqFindsNextWeek(dates, goal) {\n  let result = 0;\n  let days = 0;\n\n  if (dates.length < 7 || goal < 1) {\n    return result;\n  }\n\n  for (let i = 0; i < 7; i++) {\n    if (dates[i].findCount < goal) {\n      result += goal - dates[i].findCount;\n      days++;\n    }\n  }\n\n  if (result !== 0) {\n    return `${result} -- (${days} day${days > 1 ? \"s\" : \"\"})`;\n  } else {\n    return result;\n  }\n}\n\n// Helper function that returns the day of the month as an integer.\n//\n// Input: string containing the date in the format MM-DD\n//\n// Output: integer day of the month for the given date\nexport function getDayOfMonth(date) {\n  // 01234\n  // MM-DD\n  const dayString = date.substring(3);\n  const parsed = parseInt(dayString, 10);\n\n  if (isNaN(parsed)) {\n    return 0;\n  }\n\n  return parsed;\n}\n\n// Helper function to return the month as a three-character string\n//\n// Input: string containing the date in the format MM-DD\n//\n// Output: 3-character string representing the month for the given date\nexport function getShortMonthName(date) {\n  return getMonthName(date, true);\n}\n\n// Helper function to get the name of the month represented by the date. The\n// returned name can be either a short 3-char string or the full name.\n//\n// Inputs: date, string in the format MM-DD\n//         short: boolean, true indicates short name, otherwise full\n//\n// Output: string containing the string representation of the month\nfunction getMonthName(date, short) {\n  // 01234\n  // MM-DD\n  const month = parseInt(date.substring(0, 2), 10);\n  const monthNames = [\n    { short: \"dummy\", long: \"dummy\" },\n    { short: \"Jan\", long: \"January\" },\n    { short: \"Feb\", long: \"February\" },\n    { short: \"Mar\", long: \"March\" },\n    { short: \"Apr\", long: \"April\" },\n    { short: \"May\", long: \"May\" },\n    { short: \"Jun\", long: \"June\" },\n    { short: \"Jul\", long: \"July\" },\n    { short: \"Aug\", long: \"August\" },\n    { short: \"Sep\", long: \"September\" },\n    { short: \"Oct\", long: \"October\" },\n    { short: \"Nov\", long: \"November\" },\n    { short: \"Dec\", long: \"December\" },\n  ];\n\n  if (isNaN(month) || month < 1 || month > 12) {\n    return \"\";\n  }\n\n  return short ? monthNames[month].short : monthNames[month].long;\n}\n\nexport function getLongDateText(date) {\n  if (date) {\n    return `${getDayOfMonth(date)} ${getMonthName(date)}`;\n  } else {\n    return \"\";\n  }\n}\n\n// returns an array of 7 days for the current week\n// input: the count data\nexport function getCurrentWeek(counts) {\n  // get the day of the week of today and use it\n  // to get the first day of the week\n  const today = DateTime.local();\n  const dayOfWeek = today.weekday;\n  const startOfWeek = today.minus({ days: dayOfWeek });\n  const date = startOfWeek.toFormat(\"MM-dd\");\n\n  return getDates(date, 7, counts);\n}\n\n// adds the offset to the current date and returns the result\n// in the format: YYYY-MM-DD\n//\n// input: the number of days in the future, 0 = today, 1= tomorrow, etc.\nexport function getFullDate(offset) {\n  const today = DateTime.local();\n  const newDay = today.plus({ days: offset });\n  return newDay.toFormat(\"yyyy-MM-dd\");\n}\n","/** @format */\n\nimport * as df from \"./dates\";\n\n// contains the code used to generate the week structures used for Grid7\n\n// Parses the dates in the data to an array of week objects\n//\n// Inputs: data { dates: [], goal: integer}\n//\n// Output: [week], where week is an array of 7 day objects\nexport function getWeeks(data) {\n  const days = getDays(data);\n  return convertDaysToWeeks(days);\n}\n\n// Parses the dates into an array of day objects for use by Grid7\n// inputs:\n//\n// { dates: [], goal: integer }\n//\n// outputs:\n//\n//   days: [\n//            {\n//              number: integer (day of the month),\n//              text: string to appear in large text (find count),\n//              subtext: string to appear under the large text (\"Finds\"),\n//              status: 'unused' | 'low' | 'ok',\n//              today: true | undefined\n//            },\n//            ...\n//         ]\n//\n// the number of days are padded front and back to be a multiple of 7\nfunction getDays(data) {\n  const { dates, goal } = data;\n\n  let days = [];\n\n  // get day of the week of the first day (today)\n  const today = new Date();\n  const currentDoW = today.getDay();\n  const currentDoM = today.getDate();\n\n  // pad the days array with unused days before the first day\n  for (let i = 0; i < currentDoW; i++) {\n    days.push(createUnusedDay(\"\"));\n  }\n\n  // fill the array with the given days\n  for (let j = 0; j < dates.length; j++) {\n    days.push(createDayObject(dates[j], goal, currentDoM, j));\n  }\n\n  // pad the end of the array to the next multiple of seven\n  let numToPad = 7 - (days.length % 7);\n\n  // don't add blank weeks\n  if (numToPad === 7) {\n    numToPad = 0;\n  }\n\n  for (let k = 0; k < numToPad; k++) {\n    days.push(createUnusedDay(\"\"));\n  }\n\n  // setup the month toggle flags on every day\n  let monthFlag = false;\n\n  for (let i = 0, len = days.length; i < len; i++) {\n    if (i > 0 && days[i].first) {\n      monthFlag = !monthFlag;\n    }\n\n    days[i].monthFlag = monthFlag;\n  }\n\n  return days;\n}\n\n// Creates a date object using the information in the given date and goal\n//\n// Inputs: date in the format specified in calendar.json\n//         goal: integer goal of finds per day\n//         currentDoM: integer current day of the month\n//         index: the index of the day within the grid (0 = first day)\n//\n// Output: day object in the format:\n//   number: day of the month (first day includes month)\n//   text: findCount of the day\n//   subtext: \"Finds\"\n//   status: 'low' | 'ok' depending on the goal and findCount\n//   today: true for the current day, false otherwise\n//   first: true if the day is the 1st of the month\n//   rawDate: the original date in format MM-DD\nfunction createDayObject(date, goal, currentDoM, index) {\n  const dom = df.getDayOfMonth(date.date);\n\n  let result = {\n    number: dom === 1 ? df.getShortMonthName(date.date) + \" \" + dom : dom,\n    text: date.findCount,\n    subtext: \"Finds\",\n    status: date.findCount < goal ? \"low\" : \"ok\",\n    today: dom === currentDoM,\n    first: dom === 1,\n    rawDate: date.date,\n    index: index,\n  };\n\n  return result;\n}\n\n// returns an usused (aka blank) day\nfunction createUnusedDay(number) {\n  return {\n    number: number,\n    text: \"\",\n    subtext: \"\",\n    status: \"unused\",\n    today: false,\n    first: false,\n    rawDate: \"\",\n    index: -1,\n  };\n}\n\n// Converts the days array into an array of weeks, where each week is an\n// array of 7 days\n//\n// Input: array of day objects\n//\n// Output: array of week objects\n//  week: array of 7 day objects\nfunction convertDaysToWeeks(days) {\n  let weeks = [];\n\n  for (let i = 0, len = days.length; i < len; i += 7) {\n    weeks.push(days.slice(i, i + 7));\n  }\n\n  return weeks;\n}\n\n// Returns an array containing the names of the days as 3-character strings\nexport function getShortDayNames() {\n  return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n}\n","/** @format */\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    borderRadius: \"7px\",\n    backgroundColor: theme.palette.summary.background,\n  },\n  box: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  zeroReq: {\n    color: theme.palette.find.noneReq,\n  },\n  moreThanZero: {\n    color: theme.palette.find.someReq,\n  },\n  summaryFigs: {\n    textAlign: \"center\",\n  },\n  text: {\n    color: theme.palette.summary.text,\n  },\n}));\n\nexport default function SummaryCard(props) {\n  const classes = useStyles();\n  const { generated, goal, next7days } = props.info;\n  return (\n    <>\n      <Card className={classes.root} variant=\"outlined\">\n        <CardContent>\n          <Box className={classes.box}>\n            <div>\n              <Typography className={classes.text}>Updated:</Typography>\n              <Typography className={classes.text}>Goal per day:</Typography>\n              <Typography className={classes.text}>Next 7 days:</Typography>\n            </div>\n            <div className={classes.summaryFigs}>\n              <Typography className={classes.text}>{generated}</Typography>\n              <Typography className={classes.text}>{goal}</Typography>\n              <Typography\n                className={\n                  next7days === 0 ? classes.zeroReq : classes.moreThanZero\n                }>\n                {next7days}\n              </Typography>\n            </div>\n          </Box>\n        </CardContent>\n      </Card>\n    </>\n  );\n}\n","/** @format */\n\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Header from \"./Header\";\nimport Week from \"./Week\";\nimport { getWeeks, getShortDayNames } from \"./ComposeWeeks\";\nimport SummaryCard from \"./SummaryCard\";\n\nconst useStyles = makeStyles((/*theme*/) => ({\n  g7root: {\n    flexGrow: 1,\n    padding: \"10px\",\n  },\n  summary: {\n    paddingBottom: \"16px\",\n  },\n}));\n\nconst Grid7 = (props) => {\n  const classes = useStyles();\n  const weeks = getWeeks(props.data);\n  const { summary, dayOnClick } = props;\n\n  let weekNum = 0;\n\n  return (\n    <>\n      <Grid container className={classes.g7root} spacing={0}>\n        <Grid item xs={12} className={classes.summary}>\n          <SummaryCard info={summary} />\n        </Grid>\n        <Header values={getShortDayNames()} />\n        {weeks.map((week) => (\n          <Week values={week} key={weekNum++} dayOnClick={dayOnClick} />\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Grid7;\n","/** @format */\n\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FindCountHeader from \"./FindCountHeader\";\nimport Grid7 from \"./Grid7\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nconst FindGrid = (props) => {\n  return (\n    <>\n      <Grid container direction=\"column\">\n        <Grid item>\n          <FindCountHeader\n            changeTheme={props.changeTheme}\n            changeDays={props.changeDays}\n            days={props.days}\n            handleWeek={props.handleWeek}\n          />\n        </Grid>\n        <Toolbar />\n        <Grid7\n          data={props.data}\n          summary={props.summary}\n          dayOnClick={props.dayOnClick}\n        />\n      </Grid>\n    </>\n  );\n};\n\nexport default FindGrid;\n","/** @format */\n\n// contains the code to get the find count data\n\nimport * as df from \"./dates\";\n\nexport const counts = require(\"./calendar.json\");\n\n// returns the find count data and summary for the given number of days\nexport function getFindCountData(days) {\n  const data = df.getNDays(days, counts);\n\n  const summaryInfo = {\n    generated: new Date(counts.creationTime).toLocaleString(),\n    goal: counts.goal,\n    next7days: df.getReqFindsNextWeek(data.dates, counts.goal),\n  };\n\n  return {\n    data: data,\n    summary: summaryInfo,\n  };\n}\n\n// returns the value from dateIndex corresponding to the given date\nfunction getDateIndex(date) {\n  if (date in counts.dateIndex) {\n    return counts.dateIndex[date];\n  }\n\n  return \"\";\n}\n\n// returns the total number of finds for the given date\nexport function getTotalFinds(date) {\n  const index = getDateIndex(date);\n\n  if (index === \"\") {\n    return -1;\n  }\n\n  return counts.dates[index].findCount;\n}\n\n// returns the number of lab finds for the given date (if any)\nexport function getLabFinds(date) {\n  const index = getDateIndex(date);\n\n  if (index === \"\") {\n    return -1;\n  }\n\n  return counts.dates[index].labs ? counts.dates[index].labs : 0;\n}\n\n// returns the number of \"normal\" finds (everything except labs) for the\n// give date\nexport function getNormalFinds(date) {\n  return getTotalFinds(date) - getLabFinds(date);\n}\n\n// returns the daily goal\nexport function getGoal() {\n  return counts.goal;\n}\n\n// returns the number of find required for the given date.\n// if the current count exceeds the goal, zero is returned\nexport function getNumToFind(date) {\n  const f = getGoal() - getTotalFinds(date);\n  return f < 0 ? \"0\" : f;\n}\n","/** @format */\n\n// implements a hook to set the theme and indicate when it is loaded\n// at startup.\n//\n// Based on code from:\n// https://css-tricks.com/a-dark-mode-toggle-with-react-and-themeprovider/\n\nimport { useEffect, useState } from \"react\";\nimport { Themes } from \"./Themes\";\n\nexport const useCustomTheme = (defaultTheme) => {\n  const [theme, setInternalTheme] = useState(defaultTheme);\n  const [componentMounted, setComponentMounted] = useState(false);\n\n  const setCustomTheme = (customTheme) => {\n    // store just the name of the theme\n    window.localStorage.setItem(\"theme\", customTheme.palette.name);\n    setInternalTheme(customTheme);\n  };\n\n  // expects th is a theme\n  const setTheme = (th) => {\n    setCustomTheme(th);\n  };\n\n  useEffect(() => {\n    // get the name of the theme\n    const localThemeName = window.localStorage.getItem(\"theme\");\n\n    if (localThemeName) {\n      setInternalTheme(Themes[localThemeName]);\n    }\n    setComponentMounted(true);\n  }, []);\n\n  return [theme, setTheme, componentMounted];\n};\n","/** @format */\n\n// helper methods for dealing with geo-locations\n\n// returns a nicely formatted geolocation in the format:\n// (N|S) DD MM.mmm (E|W) DDD MM.mmm\nexport function getFormattedGeoLoc(pos) {\n  return `${getFormattedLatitude(pos.latitude)}, ${getFormattedLongitude(\n    pos.longitude\n  )}`;\n}\n\nexport function getFormattedLatitude(lat) {\n  const dir = lat >= 0 ? \"N\" : \"S\";\n  return `${dir} ${convertToDegMinutes(lat)}`;\n}\n\nexport function getFormattedLongitude(lon) {\n  const dir = lon >= 0 ? \"E\" : \"W\";\n  return `${dir} ${convertToDegMinutes(lon)}`;\n}\n\n// converts decimal degrees to degrees and decimal minutes\n// returns a string in the format: [D][D]D MM.mmm (any - sign is removed)\nexport function convertToDegMinutes(dd) {\n  let deg = dd | 0; // truncate to get degrees without sign\n  const frac = Math.abs(dd - deg); // get fractional part\n  let min = frac * 60; // get the minutes\n\n  // check to see if the minutes round up to more than a whole degree\n  if (min >= 60.0) {\n    deg++;\n    min = min - 60.0;\n  }\n\n  return `${Math.abs(deg)}° ${min.toFixed(3)}`;\n}\n\n// converts a position object to a string suitable for use with the\n// geocaching.com browse map in the format YY.YYYYY,XXX.XXXXXX where\n// Y is the digits of latitude and X is the digits of longitude\nexport function convertToString(pos) {\n  return `${pos.latitude.toFixed(6)},${pos.longitude.toFixed(6)}`;\n}\n","/** @format */\n\n// functions for manipulating and formatting the sunrise, sunset times\n\nexport function getLocalSunriseTime(sun) {\n  if (sun.status !== \"OK\") {\n    return \"UNKNOWN\";\n  }\n\n  return getLocaleTime(sun.results.sunrise);\n}\n\nexport function getLocalSunsetTime(sun) {\n  if (sun.status !== \"OK\") {\n    return \"UNKNOWN\";\n  }\n\n  return getLocaleTime(sun.results.sunset);\n}\n\nfunction getLocaleTime(t) {\n  const d = new Date(t);\n  return d.toLocaleTimeString();\n}\n\nexport function getAPIurl() {\n  return \"https://sunrise-sunset.org/api\";\n}\n","/** @format */\n\n// geocaching.com link helper functions\n\nimport * as geo from \"./Geoloc\";\n\n// basic search URL\n// https://www.geocaching.com/play/search?origin=N+41%c2%b0+1.366,+W+111%c2%b0+56.419&nfb[0]=llenseuqm&f=2&o=2&utr=false\n\n// creates a URL for the geocaching.com search interface\nexport function getGCSearchURL(loc) {\n  const baseURL = \"https://www.geocaching.com/play/search\";\n  const userParam = \"nfb[0]=llenseuqm\";\n  const foundByUser = \"f=2\";\n  const ownedByUser = \"o=2\";\n  const utr = \"utr=false\";\n\n  // create the origin parameter by replacing spaces with +\n  const origin = \"origin=\" + loc.replace(/\\s/g, \"+\");\n\n  // build the URL and return\n  return `${baseURL}?${origin}&${userParam}&${foundByUser}&${ownedByUser}&${utr}`;\n}\n\n// browse map URL\n// https://www.geocaching.com/map/#?ll=41.022767,-111.940317&z=14\n// input: position object having latitude and longitude fields\nexport function getGCBrowseMapURL(pos) {\n  const baseURL = \"https://www.geocaching.com/map/#\";\n  const ll = `ll=${geo.convertToString(pos)}`;\n  const zoom = \"z=14\";\n\n  return `${baseURL}?${ll}&${zoom}`;\n}\n","/** @format */\n\n// implements the details dialog\nimport React, { useState, useEffect } from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport Brightness2Icon from \"@material-ui/icons/Brightness2\";\nimport GpsFixedIcon from \"@material-ui/icons/GpsFixed\";\nimport axios from \"axios\";\n\nimport * as df from \"./dates\";\nimport * as gd from \"./GetData\";\nimport * as geo from \"./Geoloc\";\nimport * as st from \"./SunTimes\";\nimport * as gc from \"./GCLinks\";\n\n// TODO: 01-04-2021 -- change the weather api calls to use a server\n\nfunction DayDetail(props) {\n  const { onClose, selectedValue, open, cell, position, sunTimes } = props;\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [weather, setWeather] = useState({});\n\n  const date = cell.day;\n  const qDT = `dt=${df.getFullDate(cell.offset)}`;\n\n  const numToFind = gd.getNumToFind(date);\n  const location = `q=${position.latitude},${position.longitude}`;\n\n  useEffect(() => {\n    const baseURL = \"https://api.weatherapi.com/v1/forecast.json\";\n    const key = \"key=86c4ba25d0724682a57200153201412\";\n    // const location = \"q=41.02,-111.94\"; // Kaysville\n    const days = \"days=1\";\n\n    const url = `${baseURL}?${key}&${location}&${days}&${qDT}`;\n    let result = {};\n\n    // console.log(`url: ${url}`); // url is ok\n\n    axios.get(url).then((response) => {\n      // console.log(\"in dialog useEffect():\");\n      // console.log(response.data);\n      setWeather(response.data);\n      setIsLoaded(true);\n    });\n\n    return result;\n  }, [location, qDT]);\n\n  const useStyles = makeStyles((theme) => ({\n    root: {},\n    content: {\n      minWidth: \"300px\",\n      backgroundColor: theme.palette.day.normBkgnd,\n      padding: \"10px\",\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.day.number,\n      padding: \"5px\",\n    },\n    paper: {\n      padding: \"10px\",\n    },\n    spacer: {\n      height: \"10px\",\n    },\n    apilink: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n    },\n    finds: {\n      paddingLeft: \"10px\",\n      color:\n        numToFind > 0 ? theme.palette.find.someReq : theme.palette.find.noneReq,\n    },\n    numtofind: {\n      display: \"flex\",\n    },\n    gclinksdiv: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n    },\n    gclink: {\n      color: theme.palette.day.altBkgnd,\n      paddingLeft: \"20px\",\n    },\n    weatherFact: {\n      paddingLeft: \"15px\",\n    },\n    sun: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    suntime: {\n      paddingLeft: \"10px\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const getCurrentWeather = () => {\n    // if the selected day is not today, then the current weather is not displayed\n    if (!cell.today) {\n      return <></>;\n    } else {\n      const currentTemp = `${weather.current.temp_f.toFixed(\n        0\n      )}, feels like: ${weather.current.feelslike_f.toFixed(0)} °F`;\n      const currentIcon = `https:${weather.current.condition.icon}`;\n      const currentWind = `${weather.current.wind_mph.toFixed(\n        0\n      )}, gust: ${weather.current.gust_mph.toFixed(0)} MPH`;\n      return (\n        <>\n          <div className={classes.spacer}></div>\n          <Typography>Current weather in {weather.location.name}:</Typography>\n          <Typography className={classes.weatherFact}>\n            Temp: {currentTemp}\n          </Typography>\n          <Typography className={classes.weatherFact}>\n            Wind: {currentWind}\n          </Typography>\n          <Typography className={classes.weatherFact}>\n            {weather.current.condition.text}\n          </Typography>\n          <div className={classes.weatherFact}>\n            <img src={currentIcon} alt=\"weather\"></img>\n          </div>\n        </>\n      );\n    }\n  };\n\n  // returns true if the weather object contains a forecast\n  const isForecastAvailable = () => {\n    try {\n      if (weather.forecast.forecastday.length > 0) {\n        return true;\n      }\n    } catch {\n      // ignore the error\n    }\n\n    return false;\n  };\n\n  const getForecastWeather = () => {\n    // if there is no forecast available (API docs say 10 days in the future\n    // but it seems to work for something like 16)\n    if (!isForecastAvailable()) {\n      return <></>;\n    }\n\n    const forecast = weather.forecast.forecastday[0];\n    const temps = `High/Low: ${forecast.day.maxtemp_f.toFixed(\n      0\n    )}/${forecast.day.mintemp_f.toFixed(0)} °F`;\n\n    // get the current hour and use it to get the forecast for the next hour\n    // this will seem more representative of the coming weather\n    let hour = df.getCurrentHour();\n\n    if (hour < 23) {\n      hour++;\n    }\n\n    const forecastHour = weather.forecast.forecastday[0].hour[hour];\n\n    const condition = `${forecastHour.condition.text}`;\n    const icon = `https:${forecastHour.condition.icon}`;\n    const precipChance = `Chance Precip: ${forecast.day.daily_chance_of_rain}%`;\n    const snowChance = `Chance Snow: ${forecast.day.daily_chance_of_snow}%`;\n    const maxWind = `Max. Wind: ${forecast.day.maxwind_mph.toFixed(0)} MPH`;\n    const uv = `UV Index: ${forecast.day.uv}`;\n\n    return (\n      <>\n        <Typography>Forecast:</Typography>\n        <Typography className={classes.weatherFact}>{temps}</Typography>\n        <Typography className={classes.weatherFact}>{maxWind}</Typography>\n        <Typography className={classes.weatherFact}>{precipChance}</Typography>\n        <Typography className={classes.weatherFact}>{snowChance}</Typography>\n        <Typography className={classes.weatherFact}>{uv}</Typography>\n        <Typography className={classes.weatherFact}>{condition}</Typography>\n        <div className={classes.weatherFact}>\n          <img src={icon} alt=\"weather\"></img>\n        </div>\n      </>\n    );\n  };\n\n  const getSunTimes = () => {\n    let sunrise = \"\";\n    let sunset = \"\";\n\n    // if the weather forecast is available, use the info from it, otherwise\n    // use the free api\n    if (isForecastAvailable()) {\n      sunrise = weather.forecast.forecastday[0].astro.sunrise;\n      sunset = weather.forecast.forecastday[0].astro.sunset;\n    } else {\n      sunrise = st.getLocalSunriseTime(sunTimes);\n      sunset = st.getLocalSunsetTime(sunTimes);\n    }\n    return (\n      <>\n        <div className={classes.sun}>\n          <WbSunnyIcon fontSize=\"small\" />\n          <Typography\n            className={classes.suntime}>{`Sunrise: ${sunrise}`}</Typography>\n        </div>\n        <div className={classes.sun}>\n          <Brightness2Icon fontSize=\"small\" />\n          <Typography\n            className={classes.suntime}>{`Sunset: ${sunset}`}</Typography>\n        </div>\n      </>\n    );\n  };\n\n  const getSunAPILink = () => {\n    // configure the link depending on which API is used\n\n    let linkHref = \"\";\n    let linkText = \"\";\n\n    if (isForecastAvailable()) {\n      linkHref = \"https://www.weatherapi.com/\";\n      linkText = \"WeatherAPI.com\";\n    } else {\n      linkHref = st.getAPIurl();\n      linkText = \"Sunrise/Sunset API\";\n    }\n\n    return (\n      <>\n        <div className={classes.spacer}></div>\n        <div className={classes.spacer}></div>\n        <Link\n          className={classes.apilink}\n          href={linkHref}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          color=\"textSecondary\"\n          variant=\"body2\"\n          underline=\"always\">\n          {linkText}\n        </Link>\n      </>\n    );\n  };\n\n  const getWeatherInfo = () => {\n    // if there is no weather info at all:\n    if (!weather) {\n      return (\n        <>\n          <Typography>Weather Not Available</Typography>\n        </>\n      );\n    }\n\n    return (\n      <>\n        {getCurrentWeather()}\n        {getForecastWeather()}\n      </>\n    );\n  };\n\n  const getGeolocItems = () => {\n    // if the position is not available, don't render anything\n    // that needs it\n    if (position.status === \"ok\") {\n      const loc = geo.getFormattedGeoLoc(position);\n      return (\n        <>\n          <div className={classes.spacer}></div>\n          <div className={classes.sun}>\n            <GpsFixedIcon fontSize=\"small\" />\n            <Typography className={classes.suntime}>\n              Location: {`${loc}`}\n            </Typography>\n          </div>\n          <div className={classes.gclinksdiv}>\n            <Link\n              className={classes.gclink}\n              href={`${gc.getGCSearchURL(loc)}`}\n              target=\"_blank\"\n              rel=\"nonreferrer\"\n              underline=\"always\">\n              Search\n            </Link>\n            <Link\n              className={classes.gclink}\n              href={gc.getGCBrowseMapURL(position)}\n              underline=\"always\"\n              target=\"_blank\"\n              rel=\"nonreferrer\">\n              GC Map\n            </Link>\n          </div>\n          <div className={classes.spacer}></div>\n          {getSunTimes()}\n          <div className={classes.spacer}></div>\n          {getWeatherInfo()}\n          {getSunAPILink()}\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Typography>Location: unavailable</Typography>\n        </>\n      );\n    }\n  };\n\n  if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <>\n        <Dialog onClose={handleClose} open={open} className={classes.root}>\n          <div className={classes.content}>\n            <DialogTitle id=\"daydetailtitle\">\n              {`${df.getLongDateText(date)}`}\n              <IconButton className={classes.closeButton} onClick={handleClose}>\n                <CloseIcon />\n              </IconButton>\n            </DialogTitle>\n            <Paper elevation={3} className={classes.paper}>\n              <Typography>\n                Total finds: {`${gd.getTotalFinds(date)}`}\n              </Typography>\n              <Typography>\n                Normal finds: {`${gd.getNormalFinds(date)}`}\n              </Typography>\n              <Typography>Lab finds: {`${gd.getLabFinds(date)}`}</Typography>\n              <Typography>Goal: {`${gd.getGoal()}`}</Typography>\n              <div className={classes.numtofind}>\n                <Typography>Number to find: </Typography>\n                <Typography\n                  className={classes.finds}>{`${numToFind}`}</Typography>\n              </div>\n              {getGeolocItems()}\n            </Paper>\n          </div>\n        </Dialog>\n      </>\n    );\n  }\n}\n\nexport default DayDetail;\n","/** @format */\n\n// implements the to-do list for the next week\n\nimport React from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { makeStyles, withTheme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport * as df from \"./dates\";\n\nfunction NextWeek(props) {\n  const { onClose, open, week } = props;\n  const small = useMediaQuery(props.theme.breakpoints.down(\"sm\"));\n\n  const useStyles = makeStyles((theme) => ({\n    root: {},\n    content: {\n      minWidth: \"300px\",\n      padding: \"10px\",\n      backgroundColor: theme.palette.background.default,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.day.normBkgnd,\n      padding: \"5px\",\n    },\n    spacer: {\n      height: \"10px\",\n    },\n    gridRoot: {\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    summary: {\n      padding: \"10px\",\n      color: theme.palette.day.number,\n      backgroundColor: theme.palette.day.normBkgnd,\n    },\n    weekGrid: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n    dayCell: {},\n    dayText: {\n      padding: \"5px\",\n      color: theme.palette.day.number,\n    },\n    findText: {\n      paddingBottom: \"7px\",\n      textAlign: \"center\",\n      color: theme.palette.find.someReq,\n    },\n    findZero: {\n      color: \"transparent\",\n    },\n    dayPaper: {\n      backgroundColor: theme.palette.day.normBkgnd,\n    },\n  }));\n\n  const classes = useStyles();\n\n  const handleClose = () => {\n    onClose(\"\");\n  };\n\n  const getSummaryInfo = () => {\n    // loop over the days and generate the summary info\n    let finds = 0;\n    let days = 0;\n\n    for (let i = 0; i < week.dates.length; i++) {\n      const day = week.dates[i];\n\n      if (day.findCount < week.goal) {\n        days++;\n        finds += week.goal - day.findCount;\n      }\n    }\n\n    return (\n      <Paper className={classes.summary}>\n        <Typography>Daily Goal: {week.goal}</Typography>\n        <Typography>Total Finds Needed This Week: {finds}</Typography>\n        <Typography>Days Needing Finds: {days}</Typography>\n      </Paper>\n    );\n  };\n\n  /* Structure of week\n      dates: Array(7)\n      0: {date: \"01-03\", findCount: 2, dayname: \"Sunday\"}\n      1: {date: \"01-04\", findCount: 7, dayname: \"Monday\"}\n      2: {date: \"01-05\", findCount: 2, dayname: \"Tuesday\"}\n      3: {date: \"01-06\", findCount: 8, dayname: \"Wednesday\"}\n      4: {date: \"01-07\", findCount: 2, dayname: \"Thursday\"}\n      5: {date: \"01-08\", findCount: 1, dayname: \"Friday\"}\n      6: {date: \"01-09\", findCount: 2, dayname: \"Saturday\"}\n      length: 7\n      __proto__: Array(0)\n      goal: 4\n      number: 7\n      startDate: \"01-03\"\n      status: \"ok\"\n  */\n\n  const getNumToFind = (finds) => {\n    if (finds < week.goal) {\n      return week.goal - finds;\n    } else {\n      return 0;\n    }\n  };\n\n  const getDayHeader = (day) => {\n    const width = small ? 2 : 3;\n    const dayName = day.dayname.slice(0, width);\n    const dayNum = df.getDayOfMonth(day.date);\n\n    return `${dayNum} ${dayName}`;\n  };\n\n  const getDayCell = (day) => {\n    const numToFind = getNumToFind(day.findCount);\n\n    let findStyles = `${classes.findText}`;\n    if (numToFind === 0) {\n      findStyles = `${classes.findText} ${classes.findZero}`;\n    }\n\n    return (\n      <Grid item className={classes.dayCell} key={day.date}>\n        <Paper className={classes.dayPaper}>\n          <Typography\n            className={classes.dayText}\n            variant={\"overline\"}\n            noWrap={true}>\n            {getDayHeader(day)}\n          </Typography>\n          <Typography className={findStyles} variant=\"h5\">\n            {numToFind}\n          </Typography>\n        </Paper>\n      </Grid>\n    );\n  };\n\n  const getWeek = () => {\n    return (\n      <Grid container item className={classes.weekGrid} spacing={1} xs={12}>\n        {week.dates.map((day) => getDayCell(day))}\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <Dialog onClose={handleClose} open={open} className={classes.root}>\n        <div className={classes.content}>\n          <DialogTitle id=\"nextweek\">\n            Number To Find This Week\n            <IconButton className={classes.closeButton} onClick={handleClose}>\n              <CloseIcon />\n            </IconButton>\n          </DialogTitle>\n          <Grid container className={classes.gridRoot}>\n            {getWeek()}\n            <div className={classes.spacer} />\n            {getSummaryInfo()}\n          </Grid>\n        </div>\n      </Dialog>\n    </>\n  );\n}\n\nexport default withTheme(NextWeek);\n","/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport \"fontsource-roboto\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport FindGrid from \"./FindGrid\";\nimport { Themes } from \"./Themes\";\nimport { getFindCountData, counts } from \"./GetData\";\nimport { useCustomTheme } from \"./useCustomTheme\";\nimport { useDays } from \"./Days\";\nimport DayDetail from \"./DayDetail\";\nimport NextWeek from \"./NextWeek\";\nimport axios from \"axios\";\nimport { getCurrentWeek } from \"./dates\";\n\nconst App = () => {\n  const [theme, setTheme, componentMounted] = useCustomTheme(Themes.Green);\n  const defaultDays = 21;\n\n  const [days, setDays] = useDays(defaultDays);\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n\n  const [toDoOpen, setToDoOpen] = useState(false);\n  const [toDoWeek, setToDoWeek] = useState({ dates: [], goal: 0, number: 0 });\n\n  const [clickedDate, setClickedDate] = useState(\"\");\n  const [position, setPosition] = useState({\n    status: \"fail\",\n    latitude: 0,\n    longitude: 0,\n  });\n\n  const [sunTimes, setSunTimes] = useState({\n    results: {\n      sunrise: \"\",\n      sunset: \"\",\n    },\n    status: \"fail\",\n  });\n\n  let findData = getFindCountData(days);\n\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition((pos) => {\n        setPosition({\n          status: \"ok\",\n          latitude: pos.coords.latitude,\n          longitude: pos.coords.longitude,\n        });\n\n        // get the sunrise/sunset times\n        const url = `https://api.sunrise-sunset.org/json?lat=${pos.coords.latitude}&lng=${pos.coords.longitude}&formatted=0`;\n        axios.get(url).then((response) => {\n          setSunTimes(response.data);\n        });\n      });\n    }\n  }, []);\n\n  const changeTheme = (event) => {\n    setTheme(event.target.value);\n  };\n\n  const changeDays = (event) => {\n    setDays(event.target.value);\n  };\n\n  const dayOnClick = (cell) => {\n    if (cell.day !== \"\") {\n      setClickedDate(cell);\n      setOpen(true);\n    }\n  };\n\n  const dayDlgClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  const handleWeek = () => {\n    const week = getCurrentWeek(counts);\n    // console.log(week);\n\n    setToDoWeek(week);\n    setToDoOpen(true);\n  };\n\n  const toDoDlgClose = (value) => {\n    setToDoOpen(false);\n    // setToDoWeek({});\n  };\n  if (!componentMounted) {\n    return <div />;\n  }\n\n  return (\n    <>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <FindGrid\n          data={findData.data}\n          summary={findData.summary}\n          changeTheme={changeTheme}\n          changeDays={changeDays}\n          dayOnClick={dayOnClick}\n          days={days}\n          handleWeek={handleWeek}\n        />\n        <DayDetail\n          selectedValue={selectedValue}\n          open={open}\n          cell={clickedDate}\n          onClose={dayDlgClose}\n          position={position}\n          sunTimes={sunTimes}\n        />\n\n        <NextWeek week={toDoWeek} open={toDoOpen} onClose={toDoDlgClose} />\n      </MuiThemeProvider>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}