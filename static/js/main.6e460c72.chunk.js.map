{"version":3,"sources":["Palettes/GreenPalette.js","Palettes/TealPalette.js","Palettes/DarkPalette.js","Palettes/GrayPalette.js","Palettes/BluePalette.js","GenerateTheme.js","Themes.js","Days.js","FindCountHeader.jsx","HeaderDay.jsx","Header.jsx","DayCell.jsx","Week.jsx","dates.js","ComposeWeeks.js","SummaryCard.jsx","Grid7.jsx","FindGrid.jsx","GetData.js","useCustomTheme.js","Geoloc.js","GCLinks.js","SunTimes.js","DayDetail.jsx","NextWeek.jsx","App.js","index.js"],"names":["GreenPalette","name","primary","light","main","dark","headerText","background","default","Green","find","noneReq","someReq","Red","today","border","Orange","number","Gray","holiday","day","normBkgnd","altBkgnd","Yellow","altNumber","summary","text","type","TealPalette","DarkPalette","GrayPalette","altNoneReq","altSomeReq","BluePalette","generateTheme","newPalette","createMuiTheme","palette","Themes","Blue","Teal","Dark","ThemeArray","Object","keys","map","key","DayChoices","useDays","defaultDays","useState","days","setInternalDays","useEffect","d","window","localStorage","getItem","setItem","setDaysAndStore","withTheme","props","small","useMediaQuery","theme","breakpoints","down","titleText","classes","makeStyles","flex","color","spacer","height","formControl","paddingRight","paddingLeft","selectText","nextText","barText","icon","weekIcon","cursor","useStyles","AppBar","position","Toolbar","Typography","className","onClick","handleWeek","FormControl","Select","disableUnderline","root","labelId","id","value","onChange","changeDays","MenuItem","changeTheme","th","dayRoot","textAlign","HeaderDay","headerRoot","display","flexWrap","justifyContent","alignItems","cell","borderStyle","borderWidth","borderColor","backgroundColor","paddingTop","paddingBottom","Header","values","Grid","item","container","xs","getHeaderCell","subtext","status","monthFlag","normalBkgnd","normalNumClr","someReqNormClr","noneReqNormClr","colors","unused","numberColor","findColor","ok","low","cellRoot","flexDirection","up","cellNumber","cellText","cellSubText","finds","checkPad","sm","md","variant","fontSize","Week","dayOnClick","holidays","weekRoot","commonBorder","getDayCell","rawDate","index","year","offset","styleName","date","yr","years","isHoliday","Math","random","DateTime","require","getDates","startDate","counts","result","dates","goal","dateIndex","startIdx","num","parseInt","isNaN","len","length","dayNames","names","Date","getFullYear","toString","startDoW","getDay","i","push","getDayNames","dayname","getNDays","month","getMonth","getDate","padStart","getFormattedDate","getReqFindsNextWeek","findCount","getDayOfMonth","dayString","substring","parsed","getShortMonthName","getMonthName","short","monthNames","long","getLongDateText","getWeeks","data","weeks","slice","convertDaysToWeeks","currentDoW","currentDoM","createUnusedDay","j","createDayObject","numToPad","k","first","getDays","dom","df","borderRadius","box","zeroReq","moreThanZero","summaryFigs","SummaryCard","info","generated","next7days","Card","CardContent","Box","g7root","flexGrow","padding","Grid7","weekNum","spacing","week","FindGrid","direction","getFindCountData","creationTime","toLocaleString","getDateIndex","getTotalFinds","getLabFinds","labs","getNormalFinds","getGoal","getNumToFind","f","useCustomTheme","defaultTheme","setInternalTheme","componentMounted","setComponentMounted","localThemeName","customTheme","getFormattedGeoLoc","pos","lat","latitude","convertToDegMinutes","lon","longitude","dd","deg","min","abs","toFixed","getGCSearchURL","loc","origin","replace","getGCBrowseMapURL","ll","geo","getLocaleTime","t","toLocaleTimeString","DayDetail","onClose","selectedValue","open","sunTimes","allData","isLoaded","setIsLoaded","weather","setWeather","qDT","local","plus","toFormat","dayFindData","numToFind","totalFinds","normalFinds","labFinds","getDayFindData","location","url","axios","get","then","response","content","minWidth","closeButton","right","top","paper","apilink","numtofind","gclinksdiv","gclink","weatherFact","sun","suntime","handleClose","getCurrentWeather","currentTemp","current","temp_f","feelslike_f","currentIcon","condition","currentWind","wind_mph","gust_mph","src","alt","isForecastAvailable","forecast","forecastday","getForecastWeather","temps","maxtemp_f","mintemp_f","hour","getHours","forecastHour","precipChance","daily_chance_of_rain","snowChance","daily_chance_of_snow","maxWind","maxwind_mph","uv","getSunTimes","sunrise","sunset","astro","results","st","getSunAPILink","linkHref","linkText","Link","href","target","rel","underline","Dialog","DialogTitle","IconButton","Paper","elevation","getGeolocItems","gridRoot","weekGrid","dayCell","dayText","findText","findZero","dayPaper","getDayHeader","width","dayName","dayNum","findStyles","noWrap","getSummaryInfo","App","setTheme","setDays","setOpen","setSelectedValue","toDoOpen","setToDoOpen","toDoWeek","setToDoWeek","clickedDate","setClickedDate","setPosition","setSunTimes","sunTimesLoaded","setSunTimesLoaded","setAllData","dataLoaded","setDataLoaded","setHolidays","navigator","geolocation","getCurrentPosition","coords","sunURL","console","log","res","CssBaseline","event","dayOfWeek","weekday","minus","getCurrentWeek","align","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e460c72.chunk.js","sourcesContent":["/** @format */\n\n// contains the green palette values\nimport Green from \"@material-ui/core/colors/green\";\nimport Red from \"@material-ui/core/colors/red\";\nimport Yellow from \"@material-ui/core/colors/yellow\";\nimport Gray from \"@material-ui/core/colors/grey\";\nimport Orange from \"@material-ui/core/colors/orange\";\n\nconst GreenPalette = {\n  name: \"Green\",\n  primary: {\n    light: \"#6abf69\",\n    main: \"#388e3c\",\n    dark: \"#00600f\",\n    headerText: \"#fff\",\n  },\n  background: {\n    default: Green[100],\n  },\n  find: {\n    noneReq: Green[400],\n    someReq: Red[500],\n  },\n  today: {\n    border: Green[700],\n    background: Orange[200],\n    number: Gray[500],\n  },\n  holiday: {\n    border: \"#00e5ff\",\n  },\n  day: {\n    normBkgnd: \"white\",\n    altBkgnd: Yellow[50],\n    number: Gray[500],\n    altNumber: Gray[500],\n  },\n  summary: {\n    text: \"rgba(0, 0, 0, 0.87)\",\n    background: \"#white\",\n  },\n  type: \"light\",\n};\n\nexport default GreenPalette;\n","/** @format */\n\n// contains the teal palette values\nimport Green from \"@material-ui/core/colors/green\";\nimport Red from \"@material-ui/core/colors/red\";\nimport Gray from \"@material-ui/core/colors/grey\";\n\nconst TealPalette = {\n  name: \"Teal\",\n  primary: {\n    light: \"#52c7b8\",\n    main: \"#009688\",\n    dark: \"#00675b\",\n    headerText: \"#fff\",\n  },\n  background: {\n    default: \"#b2dfdb\",\n  },\n  find: {\n    noneReq: Green[400],\n    someReq: Red[500],\n  },\n  today: {\n    border: \"#009688\",\n    background: \"white\",\n    number: Gray[500],\n  },\n  holiday: {\n    border: \"#00e676\",\n  },\n  day: {\n    normBkgnd: \"white\",\n    altBkgnd: \"#fce4ec\",\n    // altBkgnd: Yellow[50],\n    number: Gray[500],\n    altNumber: Gray[500],\n  },\n  summary: {\n    text: \"rgba(0, 0, 0, 0.87)\",\n    background: \"#white\",\n  },\n  type: \"light\",\n};\n\nexport default TealPalette;\n","/** @format */\n\n// contains the teal palette values\nimport Green from \"@material-ui/core/colors/green\";\nimport Gray from \"@material-ui/core/colors/grey\";\n\nconst DarkPalette = {\n  name: \"Dark\",\n  primary: {\n    light: \"#484848\",\n    main: \"#000a12\",\n    dark: \"#000000\",\n    headerText: \"#fff\",\n  },\n  background: {\n    default: \"#263238\",\n  },\n  find: {\n    noneReq: Green[400],\n    // someReq: \"#039be5\",\n    someReq: \"#fff59d\",\n  },\n  today: {\n    border: \"#eceff1\",\n    background: \"#819ca9\",\n    number: \"#eceff1\",\n  },\n  holiday: {\n    border: \"#00e676\",\n  },\n  day: {\n    normBkgnd: \"#4f5b62\",\n    altBkgnd: \"#718792\",\n    number: Gray[500],\n    altNumber: \"black\",\n  },\n  summary: {\n    text: \"#eceff1\",\n    background: \"#4f5b62\",\n  },\n  type: \"dark\",\n};\n\nexport default DarkPalette;\n","/** @format */\n\n// contains the green palette values\nimport Gray from \"@material-ui/core/colors/grey\";\nimport Orange from \"@material-ui/core/colors/orange\";\n\nconst GrayPalette = {\n  name: \"Gray\",\n  primary: {\n    light: \"#6abf69\",\n    main: \"#3c3c3c\",\n    dark: \"#00600f\",\n    headerText: \"#8a8a8a\",\n  },\n  background: {\n    default: \"#1e1e1e\",\n  },\n  find: {\n    noneReq: Gray[500],\n    someReq: \"#e65100\",\n    altNoneReq: Gray[300],\n    altSomeReq: \"#3c3c3c\",\n  },\n  today: {\n    border: Orange[400],\n    background: \"#5c5c5c\",\n    number: Gray[500],\n  },\n  holiday: {\n    border: \"#00e676\",\n  },\n  day: {\n    normBkgnd: \"#5c5c5c\",\n    altBkgnd: Orange[400],\n    number: Gray[500],\n    altNumber: Gray[900],\n  },\n  summary: {\n    text: \"#8a8a8a\",\n    background: \"#3c3c3c\",\n  },\n  type: \"dark\",\n};\n\nexport default GrayPalette;\n","/** @format */\n\n// contains the green palette values\nimport Gray from \"@material-ui/core/colors/grey\";\n\nconst BluePalette = {\n  name: \"Blue\",\n  primary: {\n    light: \"#6abf69\",\n    main: \"#3f51b5\",\n    dark: \"#00600f\",\n    headerText: \"#76ff03\",\n  },\n  background: {\n    default: \"#3e3e3e\",\n  },\n  find: {\n    noneReq: Gray[600],\n    someReq: \"#b0ff57\",\n    altNoneReq: Gray[500],\n    altSomeReq: \"#3c3c3c\",\n  },\n  holiday: {\n    border: \"#d500f9\",\n  },\n  today: {\n    border: \"#b2ff59\",\n    background: \"#aab6fe\",\n    number: Gray[800],\n  },\n  day: {\n    normBkgnd: \"#aab6fe\",\n    altBkgnd: \"#b2ff59\",\n    number: Gray[800],\n    altNumber: Gray[900],\n  },\n  summary: {\n    text: \"#1a1a1a\",\n    background: \"#909090\",\n  },\n  type: \"dark\",\n};\n\nexport default BluePalette;\n","/** @format */\n\n// contains the code to generate the custom theme\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// creates a custom theme using the properties of the given palette\nexport function generateTheme(newPalette) {\n  const theme = createMuiTheme({\n    palette: { ...newPalette },\n  });\n\n  return theme;\n}\n","/** @format */\n\n// convenience file for palette access\n\nimport GreenPalette from \"./Palettes/GreenPalette\";\nimport TealPalette from \"./Palettes/TealPalette\";\nimport DarkPalette from \"./Palettes/DarkPalette\";\nimport GrayPalette from \"./Palettes/GrayPalette\";\nimport BluePalette from \"./Palettes/BluePalette\";\n\nimport { generateTheme } from \"./GenerateTheme\";\n\n// all available themes\nexport const Themes = {\n  Blue: generateTheme(BluePalette),\n  Green: generateTheme(GreenPalette),\n  Teal: generateTheme(TealPalette),\n  Dark: generateTheme(DarkPalette),\n  Gray: generateTheme(GrayPalette),\n};\n\n// the array of theme names\nexport const ThemeNames = Object.keys(Themes).map(\n  (key) => Themes[key].palette.name\n);\n\n// themes as an array\nexport const ThemeArray = Object.keys(Themes).map((key) => Themes[key]);\n\nexport default Themes;\n","/** @format */\n\nimport { useEffect, useState } from \"react\";\n\n// list of the number of days that can be used to fill the grid\nexport const DayChoices = [\n  7,\n  14, // default\n  21,\n  30,\n];\n\n// implements a hook to set the days to be displayed and indicate when it\n// is loaded at startup.\n//\n// Based on code from:\n// https://css-tricks.com/a-dark-mode-toggle-with-react-and-themeprovider/\n\nexport const useDays = (defaultDays) => {\n  const [days, setInternalDays] = useState(defaultDays);\n\n  const setDaysAndStore = (d) => {\n    window.localStorage.setItem(\"days\", d);\n    setInternalDays(d);\n  };\n\n  const setDays = (d) => {\n    setDaysAndStore(d);\n  };\n\n  useEffect(() => {\n    const d = window.localStorage.getItem(\"days\");\n\n    if (d) {\n      setInternalDays(d);\n    }\n  }, []);\n\n  return [days, setDays];\n};\n","/** @format */\n\nimport React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, withTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { ThemeArray } from \"./Themes\";\nimport PaletteIcon from \"@material-ui/icons/Palette\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { DayChoices } from \"./Days\";\nimport ViewWeekRoundedIcon from \"@material-ui/icons/ViewWeekRounded\";\n\nconst FindCountHeader = (props) => {\n  const small = useMediaQuery(props.theme.breakpoints.down(\"sm\"));\n  const titleText = small ? \"Finds\" : \"Cache Find Counts\";\n\n  const useStyles = makeStyles(() => ({\n    text: {\n      flex: 1,\n      color: props.theme.palette.primary.headerText,\n    },\n    spacer: {\n      height: \"10px\",\n    },\n    formControl: {\n      paddingRight: \"10px\",\n      paddingLeft: \"5px\",\n    },\n    selectText: {\n      color: props.theme.palette.primary.headerText,\n    },\n    nextText: {\n      color: props.theme.palette.primary.headerText,\n\n      paddingLeft: \"7px\",\n      paddingRight: \"7px\",\n    },\n    barText: {\n      color: props.theme.palette.primary.headerText,\n\n      paddingLeft: \"5px\",\n      paddingRight: \"15px\",\n    },\n    icon: {\n      color: props.theme.palette.primary.headerText,\n    },\n    weekIcon: {\n      paddingRight: \"10px\",\n      cursor: \"pointer\",\n    },\n  }));\n  const classes = useStyles();\n\n  const nextText = () => {\n    if (small) {\n      return \"\";\n    }\n\n    return <Typography className={classes.nextText}>Next:</Typography>;\n  };\n\n  return (\n    <>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography className={classes.text}>{titleText}</Typography>\n          <ViewWeekRoundedIcon\n            className={`${classes.icon} ${classes.weekIcon}`}\n            onClick={() => {\n              props.handleWeek();\n            }}\n          />\n          <Typography className={classes.barText}>|</Typography>\n\n          <DateRangeIcon className={classes.icon} />\n          {nextText()}\n          <FormControl className={classes.formControl}>\n            <Select\n              disableUnderline\n              classes={{ icon: classes.selectText, root: classes.selectText }}\n              labelId=\"rangeLabel\"\n              id=\"rangeSelect\"\n              value={props.days}\n              onChange={props.changeDays}>\n              {DayChoices.map((d) => {\n                return (\n                  <MenuItem key={d} value={d}>\n                    {`${d} days`}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n          <Typography className={classes.barText}>|</Typography>\n          <PaletteIcon className={classes.icon} />\n          <FormControl className={classes.formControl}>\n            <Select\n              disableUnderline\n              classes={{ icon: classes.selectText, root: classes.selectText }}\n              labelId=\"themeLabel\"\n              id=\"themeSelect\"\n              value={props.theme}\n              onChange={props.changeTheme}>\n              {ThemeArray.map((th) => {\n                return (\n                  <MenuItem key={th.palette.name} value={th}>\n                    {th.palette.name}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.spacer}></div>\n    </>\n  );\n};\n\nexport default withTheme(FindCountHeader);\n","/** @format */\n\n// Implements the individual cells in the header row\n\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  dayRoot: {\n    textAlign: \"center\",\n    color: theme.palette.primary.headerText,\n  },\n}));\n\n// expects a property named text containing a string to place in the cell\nconst HeaderDay = (props) => {\n  const classes = useStyles();\n  const { text } = props;\n\n  return (\n    <>\n      <Typography className={classes.dayRoot}>{text}</Typography>\n    </>\n  );\n};\n\nexport default HeaderDay;\n","/** @format */\n\n// implements the header of Grid7, consisting of 7 HeaderDay cells\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport HeaderDay from \"./HeaderDay\";\n\nconst useStyles = makeStyles((theme) => ({\n  headerRoot: {\n    display: \"flex\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  cell: {\n    borderStyle: \"solid\",\n    borderWidth: \"2px\",\n    borderColor: theme.palette.background.default,\n    backgroundColor: theme.palette.primary.main,\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n  },\n}));\n\n// expects a property named values that is an array containing\n// seven day header values\nconst Header = (props) => {\n  const classes = useStyles();\n  const { values } = props;\n\n  const getHeaderCell = (value) => {\n    return (\n      <Grid item className={classes.cell} key={value} xs={12}>\n        <HeaderDay text={value} />\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <Grid item container className={classes.headerRoot}>\n        {values.map((value) => getHeaderCell(value))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Header;\n","/** @format */\n\n// implements the invidual days in a row\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, withTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\n// expects the following properties:\n//   number: the number of the date\n//   text: the main text to be displayed\n//   subtext: smaller text to be displayed\n//   status: unused|ok|low\n//   today: boolean indicating whether this date is today\n//   monthFlag: boolean indicating whether this cell should be the\n//              primary month color or the alternative month color\nconst DayCell = (props) => {\n  const { number, text, subtext, status, today, monthFlag } = props.value;\n  const theme = props.theme;\n\n  let normalBkgnd = theme.palette.day.normBkgnd;\n  let normalNumClr = theme.palette.day.number;\n  let someReqNormClr = theme.palette.find.someReq;\n  let noneReqNormClr = theme.palette.find.noneReq;\n\n  if (monthFlag) {\n    normalBkgnd = theme.palette.day.altBkgnd;\n    normalNumClr = theme.palette.day.altNumber;\n\n    if (theme.palette.find.altNoneReq) {\n      noneReqNormClr = theme.palette.find.altNoneReq;\n    }\n\n    if (theme.palette.find.altSomeReq) {\n      someReqNormClr = theme.palette.find.altSomeReq;\n    }\n  }\n\n  const colors = {\n    unused: {\n      backgroundColor: theme.palette.background.default,\n      numberColor: theme.palette.background.default,\n      findColor: theme.palette.background.default,\n    },\n    ok: {\n      backgroundColor: normalBkgnd,\n      numberColor: normalNumClr,\n      findColor: noneReqNormClr,\n    },\n    low: {\n      backgroundColor: normalBkgnd,\n      numberColor: normalNumClr,\n      findColor: someReqNormClr,\n    },\n    today: {\n      backgroundColor: theme.palette.today.background,\n      numberColor: theme.palette.today.number,\n    },\n  };\n\n  let backgroundColor = colors.today.backgroundColor;\n  let numberColor = colors.today.numberColor;\n\n  if (!today) {\n    backgroundColor = colors[status].backgroundColor;\n    numberColor = colors[status].numberColor;\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    cellRoot: {\n      display: \"flex\",\n      backgroundColor: backgroundColor,\n      height: \"100px\",\n      [theme.breakpoints.down(\"sm\")]: { flexDirection: \"column\" },\n      [theme.breakpoints.down(\"sm\")]: { justifyContent: \"space-between\" },\n      [theme.breakpoints.up(\"md\")]: { flexDirection: \"row\" },\n      cursor: \"pointer\",\n    },\n    cellNumber: {\n      color: numberColor,\n      paddingLeft: \"4px\",\n    },\n    cellText: {},\n    cellSubText: {},\n    finds: {\n      color: colors[status].findColor,\n      [theme.breakpoints.up(\"md\")]: { paddingTop: \"15px\" },\n      [theme.breakpoints.down(\"sm\")]: { paddingLeft: \"7px\" },\n      textAlign: \"center\",\n      justifyContent: \"center\",\n      alignContent: \"center\",\n    },\n    checkPad: {\n      [theme.breakpoints.up(\"md\")]: { paddingTop: \"10px\" },\n    },\n  }));\n\n  const classes = useStyles();\n\n  const getFindContent = () => {\n    if (status === \"ok\") {\n      return (\n        <>\n          <div className={classes.checkPad}></div>\n          <CheckIcon fontSize=\"large\" />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Typography variant=\"h4\" className={classes.cellText}>\n            {text}\n          </Typography>\n          <Typography variant=\"subtitle2\" className={classes.cellSubText}>\n            {subtext}\n          </Typography>\n        </>\n      );\n    }\n  };\n\n  return (\n    <>\n      <Grid item container className={classes.cellRoot}>\n        <Grid item sm={12} md={4}>\n          <Typography variant=\"subtitle1\" className={classes.cellNumber}>\n            {number}\n          </Typography>\n        </Grid>\n        <Grid item className={classes.finds} sm={12} md={8}>\n          {getFindContent()}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default withTheme(DayCell);\n","/** @format */\n\n// implements a week of days (7)\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DayCell from \"./DayCell\";\n\n// expects a property named values that is an array containing\n// the values for each of the seven days:\n// values: [\n//    { number: '1', text: '12', subtext: 'Finds', status:'empty|used' },\n//    ...,\n// ]\nconst Week = (props) => {\n  const { values, dayOnClick, holidays } = props;\n\n  const useStyles = makeStyles((theme) => ({\n    weekRoot: {\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n    day: {\n      borderColor: theme.palette.background.default,\n    },\n    today: {\n      borderColor: theme.palette.today.border,\n    },\n    holiday: {\n      // TODO: add theme support for the holiday border color\n      borderColor: theme.palette.holiday.border,\n    },\n    unused: {\n      borderColor: theme.palette.background.default,\n    },\n    commonBorder: {\n      borderStyle: \"solid\",\n      borderWidth: \"3px\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  const isHoliday = (date, year) => {\n    const yr = year + \"\";\n\n    if (yr in holidays.years) {\n      if (date in holidays.years[yr]) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const getDayCell = (value) => {\n    const { status, today, rawDate, index, year } = value;\n    const cell = {\n      day: rawDate,\n      offset: index,\n      today: today,\n    };\n\n    let styleName = today ? classes.today : classes.day;\n\n    if (!today && isHoliday(rawDate, year)) {\n      styleName = classes.holiday;\n    }\n\n    if (status === \"unused\") {\n      styleName = classes.unused;\n    }\n\n    return (\n      <Grid\n        item\n        className={`${classes.commonBorder} ${styleName}`}\n        key={Math.random()}\n        xs={12}\n        onClick={() => {\n          dayOnClick(cell);\n        }}>\n        <DayCell value={value} key={Math.random()} />\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <Grid item container className={classes.weekRoot}>\n        {values.map((value) => getDayCell(value))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Week;\n","/** @format */\r\n\r\nconst { DateTime } = require(\"luxon\");\r\n\r\n//\r\n// Various date support functions\r\n//\r\n\r\n// creates a date string in the format MM-DD\r\n// does not error check the input\r\nexport function buildDate(month, day) {\r\n  const date =\r\n    month.toString().padStart(2, \"0\") + \"-\" + day.toString().padStart(2, \"0\");\r\n  return date;\r\n}\r\n\r\n// returns a string containing the given date in the format MM-DD\r\nexport function getFormattedDate(date) {\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n  return buildDate(month, day);\r\n}\r\n\r\n// returns todays date in the format MM-DD\r\nexport function getToday() {\r\n  const today = new Date();\r\n  return getFormattedDate(today);\r\n}\r\n\r\n// returns the current hour as an integer: 0-23\r\nexport function getCurrentHour() {\r\n  const now = new Date();\r\n  return now.getHours();\r\n}\r\n\r\n// Returns the given number of days, beginning with the given start date. If startDate\r\n// or number is not valid, an empty array is returned.  The maximum number of dates\r\n// returned is the complete array (366)\r\nexport function getDates(startDate, number, counts) {\r\n  let result = {\r\n    startDate: startDate,\r\n    number: number,\r\n    status: \"fail\",\r\n    dates: [],\r\n    goal: 0,\r\n  };\r\n\r\n  if (startDate in counts.dateIndex) {\r\n    // get the index of the starting day\r\n    const startIdx = counts.dateIndex[startDate];\r\n\r\n    // parse the number\r\n    let num = parseInt(number, 10);\r\n\r\n    if (!isNaN(num)) {\r\n      const len = counts.dates.length;\r\n\r\n      if (num > len) {\r\n        num = len;\r\n        result.number = num;\r\n      }\r\n\r\n      // get the names of the days\r\n      const dayNames = getDayNames(startDate, result.number);\r\n\r\n      // valid count, so fill the array\r\n      for (let i = 0; i < num; i++) {\r\n        const index = (i + startIdx) % len;\r\n\r\n        const d = counts.dates[index];\r\n        d.dayname = dayNames[i];\r\n\r\n        result.dates.push(counts.dates[index]);\r\n      }\r\n      result.goal = counts.goal;\r\n      result.status = \"ok\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n// Convenience function that returns the next 14 days\r\nexport function get14Days(counts) {\r\n  return getNDays(14, counts);\r\n}\r\n\r\n// Convenience function that returns the next num days\r\nexport function getNDays(num, counts) {\r\n  return getDates(getToday(), num, counts);\r\n}\r\n\r\n// Returns an array of strings containing the names of the\r\n// next <number> days, beginning with the given start date\r\n// in the current year.\r\n// startDate: date in the form MM-DD\r\n// number: integer number of days\r\nexport function getDayNames(startDate, number) {\r\n  const names = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  let result = [];\r\n\r\n  // get the starting day in this year\r\n  const year = new Date().getFullYear().toString();\r\n  const sd = new Date(startDate + \"-\" + year);\r\n  const startDoW = sd.getDay();\r\n\r\n  for (let i = 0; i < number; i++) {\r\n    let index = (startDoW + i) % names.length;\r\n    result.push(names[index]);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n// returns the number of finds required in the next 7 days\r\n// dates: array of dates with findcounts, if length is less than 7,\r\n//        zero is returned.\r\n// goal: the desired minimum number of finds in the next 7 days,\r\n//       must be greater than zero\r\nexport function getReqFindsNextWeek(dates, goal) {\r\n  let result = 0;\r\n  let days = 0;\r\n\r\n  if (dates.length < 7 || goal < 1) {\r\n    return result;\r\n  }\r\n\r\n  for (let i = 0; i < 7; i++) {\r\n    if (dates[i].findCount < goal) {\r\n      result += goal - dates[i].findCount;\r\n      days++;\r\n    }\r\n  }\r\n\r\n  if (result !== 0) {\r\n    return `${result} -- (${days} day${days > 1 ? \"s\" : \"\"})`;\r\n  } else {\r\n    return result;\r\n  }\r\n}\r\n\r\n// Helper function that returns the day of the month as an integer.\r\n//\r\n// Input: string containing the date in the format MM-DD\r\n//\r\n// Output: integer day of the month for the given date\r\nexport function getDayOfMonth(date) {\r\n  // 01234\r\n  // MM-DD\r\n  const dayString = date.substring(3);\r\n  const parsed = parseInt(dayString, 10);\r\n\r\n  if (isNaN(parsed)) {\r\n    return 0;\r\n  }\r\n\r\n  return parsed;\r\n}\r\n\r\n// Helper function to return the month as a three-character string\r\n//\r\n// Input: string containing the date in the format MM-DD\r\n//\r\n// Output: 3-character string representing the month for the given date\r\nexport function getShortMonthName(date) {\r\n  return getMonthName(date, true);\r\n}\r\n\r\n// Helper function to get the name of the month represented by the date. The\r\n// returned name can be either a short 3-char string or the full name.\r\n//\r\n// Inputs: date, string in the format MM-DD\r\n//         short: boolean, true indicates short name, otherwise full\r\n//\r\n// Output: string containing the string representation of the month\r\nfunction getMonthName(date, short) {\r\n  // 01234\r\n  // MM-DD\r\n  const month = parseInt(date.substring(0, 2), 10);\r\n  const monthNames = [\r\n    { short: \"dummy\", long: \"dummy\" },\r\n    { short: \"Jan\", long: \"January\" },\r\n    { short: \"Feb\", long: \"February\" },\r\n    { short: \"Mar\", long: \"March\" },\r\n    { short: \"Apr\", long: \"April\" },\r\n    { short: \"May\", long: \"May\" },\r\n    { short: \"Jun\", long: \"June\" },\r\n    { short: \"Jul\", long: \"July\" },\r\n    { short: \"Aug\", long: \"August\" },\r\n    { short: \"Sep\", long: \"September\" },\r\n    { short: \"Oct\", long: \"October\" },\r\n    { short: \"Nov\", long: \"November\" },\r\n    { short: \"Dec\", long: \"December\" },\r\n  ];\r\n\r\n  if (isNaN(month) || month < 1 || month > 12) {\r\n    return \"\";\r\n  }\r\n\r\n  return short ? monthNames[month].short : monthNames[month].long;\r\n}\r\n\r\nexport function getLongDateText(date) {\r\n  if (date) {\r\n    return `${getDayOfMonth(date)} ${getMonthName(date)}`;\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\n// returns an array of 7 days for the current week\r\n// input: the count data\r\nexport function getCurrentWeek(counts) {\r\n  // get the day of the week of today and use it\r\n  // to get the first day of the week\r\n  const today = DateTime.local();\r\n  const dayOfWeek = today.weekday; // note: Sunday = 7, Monday = 1, Tue = 2\r\n  const startOfWeek =\r\n    dayOfWeek === 7 ? today : today.minus({ days: dayOfWeek });\r\n  const date = startOfWeek.toFormat(\"MM-dd\");\r\n\r\n  return getDates(date, 7, counts);\r\n}\r\n\r\n// adds the offset to the current date and returns the result\r\n// in the format: YYYY-MM-DD\r\n//\r\n// input: the number of days in the future, 0 = today, 1= tomorrow, etc.\r\nexport function getFullDate(offset) {\r\n  const today = DateTime.local();\r\n  const newDay = today.plus({ days: offset });\r\n  return newDay.toFormat(\"yyyy-MM-dd\");\r\n}\r\n","/** @format */\n\nimport * as df from \"./dates\";\n\n// contains the code used to generate the week structures used for Grid7\n\n// Parses the dates in the data to an array of week objects\n//\n// Inputs: data { dates: [], goal: integer}\n//\n// Output: [week], where week is an array of 7 day objects\nexport function getWeeks(data) {\n  const days = getDays(data);\n  return convertDaysToWeeks(days);\n}\n\n// Parses the dates into an array of day objects for use by Grid7\n// inputs:\n//\n// { dates: [], goal: integer }\n//\n// outputs:\n//\n//   days: [\n//            {\n//              number: integer (day of the month),\n//              text: string to appear in large text (find count),\n//              subtext: string to appear under the large text (\"Finds\"),\n//              status: 'unused' | 'low' | 'ok',\n//              today: true | undefined\n//            },\n//            ...\n//         ]\n//\n// the number of days are padded front and back to be a multiple of 7\nfunction getDays(data) {\n  const { dates, goal } = data;\n\n  let days = [];\n\n  // get day of the week of the first day (today)\n  const today = new Date();\n  const currentDoW = today.getDay();\n  const currentDoM = today.getDate();\n\n  // pad the days array with unused days before the first day\n  for (let i = 0; i < currentDoW; i++) {\n    days.push(createUnusedDay(\"\"));\n  }\n\n  // fill the array with the given days\n  for (let j = 0; j < dates.length; j++) {\n    days.push(createDayObject(dates[j], goal, currentDoM, j));\n  }\n\n  // pad the end of the array to the next multiple of seven\n  let numToPad = 7 - (days.length % 7);\n\n  // don't add blank weeks\n  if (numToPad === 7) {\n    numToPad = 0;\n  }\n\n  for (let k = 0; k < numToPad; k++) {\n    days.push(createUnusedDay(\"\"));\n  }\n\n  // setup the month toggle flags and years on every day\n  let monthFlag = false;\n  let year = today.getFullYear();\n\n  for (let i = 0, len = days.length; i < len; i++) {\n    // toggle the month flag, only if this is not the first date shown\n    if (i > 0 && days[i].first) {\n      monthFlag = !monthFlag;\n\n      // if the date is 01-01, then increment the year\n      if (days[i].rawDate === \"01-01\") {\n        year++;\n      }\n    }\n\n    days[i].monthFlag = monthFlag;\n    days[i].year = year;\n  }\n\n  return days;\n}\n\n// Creates a date object using the information in the given date and goal\n//\n// Inputs: date in the format specified in calendar.json\n//         goal: integer goal of finds per day\n//         currentDoM: integer current day of the month\n//         index: the index of the day within the grid (0 = first day)\n//\n// Output: day object in the format:\n//   number: day of the month (first day includes month)\n//   text: findCount of the day\n//   subtext: \"Finds\"\n//   status: 'low' | 'ok' depending on the goal and findCount\n//   today: true for the current day, false otherwise\n//   first: true if the day is the 1st of the month\n//   rawDate: the original date in format MM-DD\nfunction createDayObject(date, goal, currentDoM, index) {\n  const dom = df.getDayOfMonth(date.date);\n\n  let result = {\n    number: dom === 1 ? df.getShortMonthName(date.date) + \" \" + dom : dom,\n    text: date.findCount,\n    subtext: \"Finds\",\n    status: date.findCount < goal ? \"low\" : \"ok\",\n    today: dom === currentDoM,\n    first: dom === 1,\n    rawDate: date.date,\n    index: index,\n  };\n\n  return result;\n}\n\n// returns an usused (aka blank) day\nfunction createUnusedDay(number) {\n  return {\n    number: number,\n    text: \"\",\n    subtext: \"\",\n    status: \"unused\",\n    today: false,\n    first: false,\n    rawDate: \"\",\n    index: -1,\n  };\n}\n\n// Converts the days array into an array of weeks, where each week is an\n// array of 7 days\n//\n// Input: array of day objects\n//\n// Output: array of week objects\n//  week: array of 7 day objects\nfunction convertDaysToWeeks(days) {\n  let weeks = [];\n\n  for (let i = 0, len = days.length; i < len; i += 7) {\n    weeks.push(days.slice(i, i + 7));\n  }\n\n  return weeks;\n}\n\n// Returns an array containing the names of the days as 3-character strings\nexport function getShortDayNames() {\n  return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n}\n","/** @format */\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    borderRadius: \"7px\",\n    backgroundColor: theme.palette.summary.background,\n  },\n  box: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  zeroReq: {\n    color: theme.palette.find.noneReq,\n  },\n  moreThanZero: {\n    color: theme.palette.find.someReq,\n  },\n  summaryFigs: {\n    textAlign: \"center\",\n  },\n  text: {\n    color: theme.palette.summary.text,\n  },\n}));\n\nexport default function SummaryCard(props) {\n  const classes = useStyles();\n  const { generated, goal, next7days } = props.info;\n  return (\n    <>\n      <Card className={classes.root} variant=\"outlined\">\n        <CardContent>\n          <Box className={classes.box}>\n            <div>\n              <Typography className={classes.text}>Updated:</Typography>\n              <Typography className={classes.text}>Goal per day:</Typography>\n              <Typography className={classes.text}>Next 7 days:</Typography>\n            </div>\n            <div className={classes.summaryFigs}>\n              <Typography className={classes.text}>{generated}</Typography>\n              <Typography className={classes.text}>{goal}</Typography>\n              <Typography\n                className={\n                  next7days === 0 ? classes.zeroReq : classes.moreThanZero\n                }>\n                {next7days}\n              </Typography>\n            </div>\n          </Box>\n        </CardContent>\n      </Card>\n    </>\n  );\n}\n","/** @format */\n\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Header from \"./Header\";\nimport Week from \"./Week\";\nimport { getWeeks, getShortDayNames } from \"./ComposeWeeks\";\nimport SummaryCard from \"./SummaryCard\";\n\nconst useStyles = makeStyles((/*theme*/) => ({\n  g7root: {\n    flexGrow: 1,\n    padding: \"10px\",\n  },\n  summary: {\n    paddingBottom: \"16px\",\n  },\n}));\n\nconst Grid7 = (props) => {\n  const classes = useStyles();\n  const weeks = getWeeks(props.data);\n  const { summary, dayOnClick, holidays } = props;\n\n  let weekNum = 0;\n\n  return (\n    <>\n      <Grid container className={classes.g7root} spacing={0}>\n        <Grid item xs={12} className={classes.summary}>\n          <SummaryCard info={summary} />\n        </Grid>\n        <Header values={getShortDayNames()} />\n        {weeks.map((week) => (\n          <Week\n            values={week}\n            key={weekNum++}\n            dayOnClick={dayOnClick}\n            holidays={holidays}\n          />\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Grid7;\n","/** @format */\n\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FindCountHeader from \"./FindCountHeader\";\nimport Grid7 from \"./Grid7\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nconst FindGrid = (props) => {\n  return (\n    <>\n      <Grid container direction=\"column\">\n        <Grid item>\n          <FindCountHeader\n            changeTheme={props.changeTheme}\n            changeDays={props.changeDays}\n            days={props.days}\n            handleWeek={props.handleWeek}\n          />\n        </Grid>\n        <Toolbar />\n        <Grid7\n          data={props.data}\n          summary={props.summary}\n          dayOnClick={props.dayOnClick}\n          holidays={props.holidays}\n        />\n      </Grid>\n    </>\n  );\n};\n\nexport default FindGrid;\n","/** @format */\n\n// utility functions for getting info out of the data\n\nimport * as df from \"./dates\";\n\n// convenience function to return find data for a given date\nexport function getDayFindData(date, counts) {\n  let result = {\n    numToFind: getNumToFind(date, counts),\n    totalFinds: getTotalFinds(date, counts),\n    normalFinds: getNormalFinds(date, counts),\n    labFinds: getLabFinds(date, counts),\n    goal: getGoal(counts),\n  };\n\n  return result;\n}\n\n// returns the find count data and summary for the given number of days\nexport function getFindCountData(days, counts) {\n  const data = df.getNDays(days, counts);\n\n  const summaryInfo = {\n    generated: new Date(counts.creationTime).toLocaleString(),\n    goal: counts.goal,\n    next7days: df.getReqFindsNextWeek(data.dates, counts.goal),\n  };\n\n  return {\n    data: data,\n    summary: summaryInfo,\n  };\n}\n\n// returns the value from dateIndex corresponding to the given date\nfunction getDateIndex(date, counts) {\n  if (date in counts.dateIndex) {\n    return counts.dateIndex[date];\n  }\n\n  return \"\";\n}\n\n// returns the total number of finds for the given date\nexport function getTotalFinds(date, counts) {\n  const index = getDateIndex(date, counts);\n\n  if (index === \"\") {\n    return -1;\n  }\n\n  return counts.dates[index].findCount;\n}\n\n// returns the number of lab finds for the given date (if any)\nexport function getLabFinds(date, counts) {\n  const index = getDateIndex(date, counts);\n\n  if (index === \"\") {\n    return -1;\n  }\n\n  return counts.dates[index].labs ? counts.dates[index].labs : 0;\n}\n\n// returns the number of \"normal\" finds (everything except labs) for the\n// give date\nexport function getNormalFinds(date, counts) {\n  return getTotalFinds(date, counts) - getLabFinds(date, counts);\n}\n\n// returns the daily goal\nexport function getGoal(counts) {\n  return counts.goal;\n}\n\n// returns the number of find required for the given date.\n// if the current count exceeds the goal, zero is returned\nexport function getNumToFind(date, counts) {\n  const f = getGoal(counts) - getTotalFinds(date, counts);\n  return f < 0 ? \"0\" : f;\n}\n","/** @format */\n\n// implements a hook to set the theme and indicate when it is loaded\n// at startup.\n//\n// Based on code from:\n// https://css-tricks.com/a-dark-mode-toggle-with-react-and-themeprovider/\n\nimport { useEffect, useState } from \"react\";\nimport { Themes } from \"./Themes\";\n\nexport const useCustomTheme = (defaultTheme) => {\n  const [theme, setInternalTheme] = useState(defaultTheme);\n  const [componentMounted, setComponentMounted] = useState(false);\n\n  const setCustomTheme = (customTheme) => {\n    // store just the name of the theme\n    window.localStorage.setItem(\"theme\", customTheme.palette.name);\n    setInternalTheme(customTheme);\n  };\n\n  // expects th is a theme\n  const setTheme = (th) => {\n    setCustomTheme(th);\n  };\n\n  useEffect(() => {\n    // get the name of the theme\n    const localThemeName = window.localStorage.getItem(\"theme\");\n\n    if (localThemeName) {\n      setInternalTheme(Themes[localThemeName]);\n    }\n    setComponentMounted(true);\n  }, []);\n\n  return [theme, setTheme, componentMounted];\n};\n","/** @format */\n\n// helper methods for dealing with geo-locations\n\n// returns a nicely formatted geolocation in the format:\n// (N|S) DD MM.mmm (E|W) DDD MM.mmm\nexport function getFormattedGeoLoc(pos) {\n  return `${getFormattedLatitude(pos.latitude)}, ${getFormattedLongitude(\n    pos.longitude\n  )}`;\n}\n\nexport function getFormattedLatitude(lat) {\n  const dir = lat >= 0 ? \"N\" : \"S\";\n  return `${dir} ${convertToDegMinutes(lat)}`;\n}\n\nexport function getFormattedLongitude(lon) {\n  const dir = lon >= 0 ? \"E\" : \"W\";\n  return `${dir} ${convertToDegMinutes(lon)}`;\n}\n\n// converts decimal degrees to degrees and decimal minutes\n// returns a string in the format: [D][D]D MM.mmm (any - sign is removed)\nexport function convertToDegMinutes(dd) {\n  let deg = dd | 0; // truncate to get degrees without sign\n  const frac = Math.abs(dd - deg); // get fractional part\n  let min = frac * 60; // get the minutes\n\n  // check to see if the minutes round up to more than a whole degree\n  if (min >= 60.0) {\n    deg++;\n    min = min - 60.0;\n  }\n\n  return `${Math.abs(deg)}° ${min.toFixed(3)}`;\n}\n\n// converts a position object to a string suitable for use with the\n// geocaching.com browse map in the format YY.YYYYY,XXX.XXXXXX where\n// Y is the digits of latitude and X is the digits of longitude\nexport function convertToString(pos) {\n  return `${pos.latitude.toFixed(6)},${pos.longitude.toFixed(6)}`;\n}\n","/** @format */\n\n// geocaching.com link helper functions\n\nimport * as geo from \"./Geoloc\";\n\n// basic search URL\n// https://www.geocaching.com/play/search?origin=N+41%c2%b0+1.366,+W+111%c2%b0+56.419&nfb[0]=llenseuqm&f=2&o=2&utr=false\n\n// creates a URL for the geocaching.com search interface\nexport function getGCSearchURL(loc) {\n  const baseURL = \"https://www.geocaching.com/play/search\";\n  const userParam = \"nfb[0]=llenseuqm\";\n  const foundByUser = \"f=2\";\n  const ownedByUser = \"o=2\";\n  const utr = \"utr=false\";\n\n  // create the origin parameter by replacing spaces with +\n  const origin = \"origin=\" + loc.replace(/\\s/g, \"+\");\n\n  // build the URL and return\n  return `${baseURL}?${origin}&${userParam}&${foundByUser}&${ownedByUser}&${utr}`;\n}\n\n// browse map URL\n// https://www.geocaching.com/map/#?ll=41.022767,-111.940317&z=14\n// input: position object having latitude and longitude fields\nexport function getGCBrowseMapURL(pos) {\n  const baseURL = \"https://www.geocaching.com/map/#\";\n  const ll = `ll=${geo.convertToString(pos)}`;\n  const zoom = \"z=14\";\n\n  return `${baseURL}?${ll}&${zoom}`;\n}\n","/** @format */\n\n// functions for manipulating and formatting the sunrise, sunset times\n\nexport function getLocalSunriseTime(sun) {\n  if (sun.status !== \"OK\") {\n    return \"UNKNOWN\";\n  }\n\n  return getLocaleTime(sun.results.sunrise);\n}\n\nexport function getLocalSunsetTime(sun) {\n  if (sun.status !== \"OK\") {\n    return \"UNKNOWN\";\n  }\n\n  return getLocaleTime(sun.results.sunset);\n}\n\nfunction getLocaleTime(t) {\n  const d = new Date(t);\n  return d.toLocaleTimeString();\n}\n\nexport function getAPIurl() {\n  return \"https://sunrise-sunset.org/api\";\n}\n","/** @format */\n\n// implements the details dialog\nimport React, { useState, useEffect } from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport Brightness2Icon from \"@material-ui/icons/Brightness2\";\nimport GpsFixedIcon from \"@material-ui/icons/GpsFixed\";\nimport axios from \"axios\";\n\nimport { getDayFindData } from \"./GetData\";\nimport { getFormattedGeoLoc } from \"./Geoloc\";\nimport { getGCBrowseMapURL, getGCSearchURL } from \"./GCLinks\";\nimport * as df from \"./dates\";\nimport * as st from \"./SunTimes\";\n\nfunction DayDetail(props) {\n  const {\n    onClose,\n    selectedValue,\n    open,\n    cell,\n    position,\n    sunTimes,\n    allData,\n  } = props;\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [weather, setWeather] = useState({});\n\n  const date = cell.day;\n  const qDT = `dt=${df.getFullDate(cell.offset)}`;\n\n  const dayFindData = getDayFindData(date, allData);\n\n  // const location = \"q=41.02,-111.94\"; // Kaysville\n  const location = `loc=${position.latitude},${position.longitude}`;\n\n  useEffect(() => {\n    const baseURL = \"https://young-stream-78694.herokuapp.com/api/weather\";\n\n    const url = `${baseURL}?${location}&${qDT}`;\n    let result = {};\n\n    // console.log(`url: ${url}`); // url is ok\n\n    axios.get(url).then((response) => {\n      // console.log(\"in dialog useEffect():\");\n      // console.log(response.data);\n      setWeather(response.data);\n      setIsLoaded(true);\n    });\n\n    return result;\n  }, [location, qDT]);\n\n  const useStyles = makeStyles((theme) => ({\n    root: {},\n    content: {\n      minWidth: \"300px\",\n      backgroundColor: theme.palette.day.normBkgnd,\n      padding: \"10px\",\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.day.number,\n      padding: \"5px\",\n    },\n    paper: {\n      padding: \"10px\",\n    },\n    spacer: {\n      height: \"10px\",\n    },\n    apilink: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n    },\n    finds: {\n      paddingLeft: \"10px\",\n      color:\n        dayFindData.numToFind > 0\n          ? theme.palette.find.someReq\n          : theme.palette.find.noneReq,\n    },\n    numtofind: {\n      display: \"flex\",\n    },\n    gclinksdiv: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n    },\n    gclink: {\n      color: theme.palette.day.altBkgnd,\n      paddingLeft: \"20px\",\n    },\n    weatherFact: {\n      paddingLeft: \"15px\",\n    },\n    sun: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    suntime: {\n      paddingLeft: \"10px\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const getCurrentWeather = () => {\n    // if the selected day is not today, then the current weather is not displayed\n    if (!cell.today) {\n      return <></>;\n    } else {\n      const currentTemp = `${weather.current.temp_f.toFixed(\n        0\n      )}, feels like: ${weather.current.feelslike_f.toFixed(0)} °F`;\n      const currentIcon = `https:${weather.current.condition.icon}`;\n      const currentWind = `${weather.current.wind_mph.toFixed(\n        0\n      )}, gust: ${weather.current.gust_mph.toFixed(0)} MPH`;\n      return (\n        <>\n          <div className={classes.spacer}></div>\n          <Typography>Current weather in {weather.location.name}:</Typography>\n          <Typography className={classes.weatherFact}>\n            Temp: {currentTemp}\n          </Typography>\n          <Typography className={classes.weatherFact}>\n            Wind: {currentWind}\n          </Typography>\n          <Typography className={classes.weatherFact}>\n            {weather.current.condition.text}\n          </Typography>\n          <div className={classes.weatherFact}>\n            <img src={currentIcon} alt=\"weather\"></img>\n          </div>\n        </>\n      );\n    }\n  };\n\n  // returns true if the weather object contains a forecast\n  const isForecastAvailable = () => {\n    try {\n      if (weather.forecast.forecastday.length > 0) {\n        return true;\n      }\n    } catch {\n      // ignore the error\n    }\n\n    return false;\n  };\n\n  const getForecastWeather = () => {\n    // if there is no forecast available (API docs say 10 days in the future\n    // but it seems to work for something like 16)\n    if (!isForecastAvailable()) {\n      return <></>;\n    }\n\n    const forecast = weather.forecast.forecastday[0];\n    const temps = `High/Low: ${forecast.day.maxtemp_f.toFixed(\n      0\n    )}/${forecast.day.mintemp_f.toFixed(0)} °F`;\n\n    // get the current hour and use it to get the forecast for the next hour\n    // this will seem more representative of the coming weather\n    let hour = df.getCurrentHour();\n\n    if (hour < 23) {\n      hour++;\n    }\n\n    const forecastHour = weather.forecast.forecastday[0].hour[hour];\n\n    const condition = `${forecastHour.condition.text}`;\n    const icon = `https:${forecastHour.condition.icon}`;\n    const precipChance = `Chance Precip: ${forecast.day.daily_chance_of_rain}%`;\n    const snowChance = `Chance Snow: ${forecast.day.daily_chance_of_snow}%`;\n    const maxWind = `Max. Wind: ${forecast.day.maxwind_mph.toFixed(0)} MPH`;\n    const uv = `UV Index: ${forecast.day.uv}`;\n\n    return (\n      <>\n        <Typography>Forecast:</Typography>\n        <Typography className={classes.weatherFact}>{temps}</Typography>\n        <Typography className={classes.weatherFact}>{maxWind}</Typography>\n        <Typography className={classes.weatherFact}>{precipChance}</Typography>\n        <Typography className={classes.weatherFact}>{snowChance}</Typography>\n        <Typography className={classes.weatherFact}>{uv}</Typography>\n        <Typography className={classes.weatherFact}>{condition}</Typography>\n        <div className={classes.weatherFact}>\n          <img src={icon} alt=\"weather\"></img>\n        </div>\n      </>\n    );\n  };\n\n  const getSunTimes = () => {\n    let sunrise = \"\";\n    let sunset = \"\";\n\n    // if the weather forecast is available, use the info from it, otherwise\n    // use the free api\n    if (isForecastAvailable()) {\n      sunrise = weather.forecast.forecastday[0].astro.sunrise;\n      sunset = weather.forecast.forecastday[0].astro.sunset;\n    } else {\n      sunrise = st.getLocalSunriseTime(sunTimes);\n      sunset = st.getLocalSunsetTime(sunTimes);\n    }\n    return (\n      <>\n        <div className={classes.sun}>\n          <WbSunnyIcon fontSize=\"small\" />\n          <Typography\n            className={classes.suntime}>{`Sunrise: ${sunrise}`}</Typography>\n        </div>\n        <div className={classes.sun}>\n          <Brightness2Icon fontSize=\"small\" />\n          <Typography\n            className={classes.suntime}>{`Sunset: ${sunset}`}</Typography>\n        </div>\n      </>\n    );\n  };\n\n  const getSunAPILink = () => {\n    // configure the link depending on which API is used\n\n    let linkHref = \"\";\n    let linkText = \"\";\n\n    if (isForecastAvailable()) {\n      linkHref = \"https://www.weatherapi.com/\";\n      linkText = \"WeatherAPI.com\";\n    } else {\n      linkHref = st.getAPIurl();\n      linkText = \"Sunrise/Sunset API\";\n    }\n\n    return (\n      <>\n        <div className={classes.spacer}></div>\n        <div className={classes.spacer}></div>\n        <Link\n          className={classes.apilink}\n          href={linkHref}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          color=\"textSecondary\"\n          variant=\"body2\"\n          underline=\"always\">\n          {linkText}\n        </Link>\n      </>\n    );\n  };\n\n  const getWeatherInfo = () => {\n    // if there is no weather info at all:\n    if (!weather) {\n      return (\n        <>\n          <Typography>Weather Not Available</Typography>\n        </>\n      );\n    }\n\n    return (\n      <>\n        {getCurrentWeather()}\n        {getForecastWeather()}\n      </>\n    );\n  };\n\n  const getGeolocItems = () => {\n    // if the position is not available, don't render anything\n    // that needs it\n    if (position.status === \"ok\") {\n      const loc = getFormattedGeoLoc(position);\n      return (\n        <>\n          <div className={classes.spacer}></div>\n          <div className={classes.sun}>\n            <GpsFixedIcon fontSize=\"small\" />\n            <Typography className={classes.suntime}>\n              Location: {`${loc}`}\n            </Typography>\n          </div>\n          <div className={classes.gclinksdiv}>\n            <Link\n              className={classes.gclink}\n              href={`${getGCSearchURL(loc)}`}\n              target=\"_blank\"\n              rel=\"nonreferrer\"\n              underline=\"always\">\n              Search\n            </Link>\n            <Link\n              className={classes.gclink}\n              href={getGCBrowseMapURL(position)}\n              underline=\"always\"\n              target=\"_blank\"\n              rel=\"nonreferrer\">\n              GC Map\n            </Link>\n          </div>\n          <div className={classes.spacer}></div>\n          {getSunTimes()}\n          <div className={classes.spacer}></div>\n          {getWeatherInfo()}\n          {getSunAPILink()}\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Typography>Location: unavailable</Typography>\n        </>\n      );\n    }\n  };\n\n  if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <>\n        <Dialog onClose={handleClose} open={open} className={classes.root}>\n          <div className={classes.content}>\n            <DialogTitle id=\"daydetailtitle\">\n              {`${df.getLongDateText(date)}`}\n              <IconButton className={classes.closeButton} onClick={handleClose}>\n                <CloseIcon />\n              </IconButton>\n            </DialogTitle>\n            <Paper elevation={3} className={classes.paper}>\n              <Typography>\n                Total finds: {`${dayFindData.totalFinds}`}\n              </Typography>\n              <Typography>\n                Normal finds: {`${dayFindData.normalFinds}`}\n              </Typography>\n              <Typography>Lab finds: {`${dayFindData.labFinds}`}</Typography>\n              <Typography>Goal: {`${dayFindData.goal}`}</Typography>\n              <div className={classes.numtofind}>\n                <Typography>Number to find: </Typography>\n                <Typography\n                  className={\n                    classes.finds\n                  }>{`${dayFindData.numToFind}`}</Typography>\n              </div>\n              {getGeolocItems()}\n            </Paper>\n          </div>\n        </Dialog>\n      </>\n    );\n  }\n}\n\nexport default DayDetail;\n","/** @format */\n\n// implements the to-do list for the next week\n\nimport React from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { makeStyles, withTheme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport * as df from \"./dates\";\n\nfunction NextWeek(props) {\n  const { onClose, open, week } = props;\n  const small = useMediaQuery(props.theme.breakpoints.down(\"sm\"));\n\n  const useStyles = makeStyles((theme) => ({\n    root: {},\n    content: {\n      minWidth: \"300px\",\n      padding: \"10px\",\n      backgroundColor: theme.palette.background.default,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.day.normBkgnd,\n      padding: \"5px\",\n    },\n    spacer: {\n      height: \"10px\",\n    },\n    gridRoot: {\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    summary: {\n      padding: \"10px\",\n      color: theme.palette.day.number,\n      backgroundColor: theme.palette.day.normBkgnd,\n    },\n    weekGrid: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n    dayCell: {},\n    dayText: {\n      padding: \"5px\",\n      color: theme.palette.day.number,\n    },\n    findText: {\n      paddingBottom: \"7px\",\n      textAlign: \"center\",\n      color: theme.palette.find.someReq,\n    },\n    findZero: {\n      color: \"transparent\",\n    },\n    dayPaper: {\n      backgroundColor: theme.palette.day.normBkgnd,\n    },\n  }));\n\n  const classes = useStyles();\n\n  const handleClose = () => {\n    onClose(\"\");\n  };\n\n  const getSummaryInfo = () => {\n    // loop over the days and generate the summary info\n    let finds = 0;\n    let days = 0;\n\n    for (let i = 0; i < week.dates.length; i++) {\n      const day = week.dates[i];\n\n      if (day.findCount < week.goal) {\n        days++;\n        finds += week.goal - day.findCount;\n      }\n    }\n\n    return (\n      <Paper className={classes.summary}>\n        <Typography>Daily Goal: {week.goal}</Typography>\n        <Typography>Total Finds Needed This Week: {finds}</Typography>\n        <Typography>Days Needing Finds: {days}</Typography>\n      </Paper>\n    );\n  };\n\n  /* Structure of week\n      dates: Array(7)\n      0: {date: \"01-03\", findCount: 2, dayname: \"Sunday\"}\n      1: {date: \"01-04\", findCount: 7, dayname: \"Monday\"}\n      2: {date: \"01-05\", findCount: 2, dayname: \"Tuesday\"}\n      3: {date: \"01-06\", findCount: 8, dayname: \"Wednesday\"}\n      4: {date: \"01-07\", findCount: 2, dayname: \"Thursday\"}\n      5: {date: \"01-08\", findCount: 1, dayname: \"Friday\"}\n      6: {date: \"01-09\", findCount: 2, dayname: \"Saturday\"}\n      length: 7\n      __proto__: Array(0)\n      goal: 4\n      number: 7\n      startDate: \"01-03\"\n      status: \"ok\"\n  */\n\n  const getNumToFind = (finds) => {\n    if (finds < week.goal) {\n      return week.goal - finds;\n    } else {\n      return 0;\n    }\n  };\n\n  const getDayHeader = (day) => {\n    const width = small ? 2 : 3;\n    const dayName = day.dayname.slice(0, width);\n    const dayNum = df.getDayOfMonth(day.date);\n\n    return `${dayNum} ${dayName}`;\n  };\n\n  const getDayCell = (day) => {\n    const numToFind = getNumToFind(day.findCount);\n\n    let findStyles = `${classes.findText}`;\n    if (numToFind === 0) {\n      findStyles = `${classes.findText} ${classes.findZero}`;\n    }\n\n    return (\n      <Grid item className={classes.dayCell} key={day.date}>\n        <Paper className={classes.dayPaper}>\n          <Typography\n            className={classes.dayText}\n            variant={\"overline\"}\n            noWrap={true}>\n            {getDayHeader(day)}\n          </Typography>\n          <Typography className={findStyles} variant=\"h5\">\n            {numToFind}\n          </Typography>\n        </Paper>\n      </Grid>\n    );\n  };\n\n  const getWeek = () => {\n    return (\n      <Grid container item className={classes.weekGrid} spacing={1} xs={12}>\n        {week.dates.map((day) => getDayCell(day))}\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <Dialog onClose={handleClose} open={open} className={classes.root}>\n        <div className={classes.content}>\n          <DialogTitle id=\"nextweek\">\n            Number To Find This Week\n            <IconButton className={classes.closeButton} onClick={handleClose}>\n              <CloseIcon />\n            </IconButton>\n          </DialogTitle>\n          <Grid container className={classes.gridRoot}>\n            {getWeek()}\n            <div className={classes.spacer} />\n            {getSummaryInfo()}\n          </Grid>\n        </div>\n      </Dialog>\n    </>\n  );\n}\n\nexport default withTheme(NextWeek);\n","/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport \"fontsource-roboto\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport FindGrid from \"./FindGrid\";\nimport { Themes } from \"./Themes\";\nimport { getFindCountData } from \"./GetData\";\nimport { useCustomTheme } from \"./useCustomTheme\";\nimport { useDays } from \"./Days\";\nimport DayDetail from \"./DayDetail\";\nimport NextWeek from \"./NextWeek\";\nimport axios from \"axios\";\nimport { getCurrentWeek } from \"./dates\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst version = \"1.1.0\";\n\nconst App = () => {\n  const [theme, setTheme, componentMounted] = useCustomTheme(Themes.Green);\n  const defaultDays = 21;\n\n  const [days, setDays] = useDays(defaultDays);\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n\n  const [toDoOpen, setToDoOpen] = useState(false);\n  const [toDoWeek, setToDoWeek] = useState({ dates: [], goal: 0, number: 0 });\n\n  const [clickedDate, setClickedDate] = useState(\"\");\n  const [position, setPosition] = useState({\n    status: \"fail\",\n    latitude: 0,\n    longitude: 0,\n  });\n\n  const [sunTimes, setSunTimes] = useState({\n    results: {\n      sunrise: \"\",\n      sunset: \"\",\n    },\n    status: \"fail\",\n  });\n  const [sunTimesLoaded, setSunTimesLoaded] = useState(false);\n\n  const [allData, setAllData] = useState({});\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  const [holidays, setHolidays] = useState({});\n\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition((pos) => {\n        setPosition({\n          status: \"ok\",\n          latitude: pos.coords.latitude,\n          longitude: pos.coords.longitude,\n        });\n\n        // get the sunrise/sunset times\n        const sunURL = `https://young-stream-78694.herokuapp.com/api/sun?lat=${pos.coords.latitude}&lon=${pos.coords.longitude}`;\n        axios.get(sunURL).then((response) => {\n          console.log(\"sun times:\");\n          console.log(response.data);\n          setSunTimes(response.data);\n          setSunTimesLoaded(true);\n        });\n      });\n    }\n\n    // get the find data\n    const wxURL = \"https://young-stream-78694.herokuapp.com/api/all\";\n\n    axios.get(wxURL).then((res) => {\n      setAllData(res.data);\n      setDataLoaded(true);\n    });\n\n    // get the holidays\n    const holURL = \"https://young-stream-78694.herokuapp.com/api/holidays\";\n\n    axios.get(holURL).then((res) => {\n      setHolidays(res.data);\n    });\n  }, []);\n\n  const changeTheme = (event) => {\n    setTheme(event.target.value);\n  };\n\n  const changeDays = (event) => {\n    setDays(event.target.value);\n  };\n\n  const dayOnClick = (cell) => {\n    if (cell.day !== \"\") {\n      setClickedDate(cell);\n      setOpen(true);\n    }\n  };\n\n  const dayDlgClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  const handleWeek = () => {\n    const week = getCurrentWeek(allData);\n    // console.log(week);\n\n    setToDoWeek(week);\n    setToDoOpen(true);\n  };\n\n  const toDoDlgClose = (value) => {\n    setToDoOpen(false);\n  };\n\n  if (!componentMounted || !dataLoaded || !sunTimesLoaded) {\n    return <div />;\n  }\n\n  return (\n    <>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <FindGrid\n          data={getFindCountData(days, allData).data}\n          summary={getFindCountData(days, allData).summary}\n          changeTheme={changeTheme}\n          changeDays={changeDays}\n          dayOnClick={dayOnClick}\n          days={days}\n          handleWeek={handleWeek}\n          holidays={holidays}\n        />\n        <Typography\n          align=\"right\"\n          variant=\"subtitle2\"\n          style={{ paddingRight: \"10px\" }}>\n          {version}\n        </Typography>\n        <DayDetail\n          selectedValue={selectedValue}\n          open={open}\n          cell={clickedDate}\n          onClose={dayDlgClose}\n          position={position}\n          sunTimes={sunTimes}\n          allData={allData}\n        />\n\n        <NextWeek week={toDoWeek} open={toDoOpen} onClose={toDoDlgClose} />\n      </MuiThemeProvider>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}