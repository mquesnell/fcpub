{"version":3,"sources":["infrastructure/Version.js","infrastructure/Server.js","infrastructure/Days.js","Palettes/GreenPalette.js","Palettes/TealPalette.js","Palettes/DarkPalette.js","Palettes/GrayPalette.js","Palettes/BluePalette.js","theme/GenerateTheme.js","theme/Themes.js","theme/useCustomTheme.js","infrastructure/dates.js","infrastructure/store.js","infrastructure/DataEngine.js","infrastructure/Geoloc.js","infrastructure/GCLinks.js","infrastructure/SunTimes.js","components/DayDetail.jsx","components/FindCountHeader.jsx","components/HeaderDay.jsx","components/Header.jsx","components/DayCell.jsx","infrastructure/Holidays.js","components/Week.jsx","infrastructure/ComposeWeeks.js","components/SummaryCard.jsx","components/Grid7.jsx","components/FindGrid.jsx","components/NextWeek.jsx","App.js","index.js"],"names":["version","getURL","endpoint","DayChoices","useDays","defaultDays","useState","days","setInternalDays","useEffect","d","window","localStorage","getItem","setItem","setDaysAndStore","GreenPalette","name","primary","light","main","dark","headerText","background","default","Green","find","noneReq","someReq","Red","today","border","Orange","number","Gray","holiday","day","normBkgnd","altBkgnd","Yellow","altNumber","summary","text","type","TealPalette","DarkPalette","GrayPalette","altNoneReq","altSomeReq","BluePalette","generateTheme","newPalette","createMuiTheme","palette","Themes","Blue","Teal","Dark","ThemeArray","Object","keys","map","key","useCustomTheme","defaultTheme","theme","setInternalTheme","componentMounted","setComponentMounted","localThemeName","th","customTheme","DateTime","require","getDates","startDate","counts","result","status","dates","goal","num","parseInt","isNaN","len","length","indices","local","year","date","monthString","substring","parsed","getMonthFromDate","getDayOfMonth","i","toFormat","dateIndex","push","plus","getNDayIndices","dayNames","names","Date","getFullYear","toString","startDoW","getDay","index","getDayNames","dayname","getNDays","month","getMonth","getDate","padStart","getFormattedDate","getReqFindsNextWeek","total_finds","dayString","getShortMonthName","getMonthName","short","monthNames","long","getLongDateText","getFullDate","offset","StoreContainer","createContainer","setTheme","toDoOpen","setToDoOpen","toDoWeek","setToDoWeek","detailIsOpen","setDetailIsOpen","clickedDate","setClickedDate","setDays","dataLoaded","setDataLoaded","findData","setFindData","holidays","setHolidays","serverVersion","setServerVersion","pq_time","update_time","config","setConfig","latitude","longitude","position","setPosition","appVersion","setAppVersion","results","sunrise","sunset","sunTimes","setSunTimes","sunTimesLoaded","setSunTimesLoaded","weatherIsLoaded","setWeatherIsLoaded","weather","setWeather","axios","get","then","res","data","navigator","geolocation","getCurrentPosition","pos","coords","sunLoc","qDT","df","sunURL","response","location","wxURL","DataEngine","store","useContainer","getGoal","getDateIndex","getTotalFinds","getLabFinds","lab_finds","getNormalFinds","norm_finds","getNumToFind","f","getDayFindData","numToFind","totalFinds","normalFinds","labFinds","getFindCountData","generated","toLocaleString","next7days","getFormattedGeoLoc","lat","convertToDegMinutes","lon","dd","deg","min","Math","abs","toFixed","getGCSearchURL","loc","origin","replace","getGCBrowseMapURL","ll","geo","getLocaleTime","t","toLocaleTimeString","DayDetail","dataEngine","dayFindData","classes","makeStyles","root","content","minWidth","backgroundColor","padding","closeButton","right","spacing","top","color","paper","spacer","height","apilink","display","justifyContent","finds","paddingLeft","numtofind","gclinksdiv","gclink","weatherFact","sun","alignItems","suntime","useStyles","handleClose","getCurrentWeather","currentTemp","current","temp_f","feelslike_f","currentIcon","condition","icon","currentWind","wind_mph","gust_mph","className","Typography","src","alt","isForecastAvailable","forecast","forecastday","getForecastWeather","temps","maxtemp_f","mintemp_f","hour","getHours","forecastHour","precipChance","daily_chance_of_rain","snowChance","daily_chance_of_snow","maxWind","maxwind_mph","uv","getSunTimes","astro","st","fontSize","getSunAPILink","linkHref","linkText","Link","href","target","rel","variant","underline","Dialog","onClose","open","DialogTitle","id","IconButton","onClick","Paper","elevation","holidayName","getGeolocItems","withTheme","props","small","useMediaQuery","breakpoints","down","titleText","flex","formControl","paddingRight","selectText","nextText","barText","weekIcon","cursor","AppBar","Toolbar","week","dayOfWeek","weekday","minus","getCurrentWeek","FormControl","Select","disableUnderline","labelId","value","onChange","event","MenuItem","dayRoot","textAlign","HeaderDay","headerRoot","flexWrap","cell","borderStyle","borderWidth","borderColor","paddingTop","paddingBottom","Header","values","Grid","item","container","xs","getHeaderCell","subtext","monthFlag","normalBkgnd","normalNumClr","someReqNormClr","noneReqNormClr","colors","unused","numberColor","findColor","ok","low","cellRoot","flexDirection","up","cellNumber","cellText","cellSubText","checkPad","sm","md","isHoliday","buildFullDate","err","console","log","message","Week","weekRoot","commonBorder","getDayCell","rawDate","styleName","getHolidayName","dayOnClick","random","getWeeks","weeks","slice","convertDaysToWeeks","currentDoW","currentDoM","createUnusedDay","j","createDayObject","numToPad","k","first","getDays","dom","borderRadius","box","zeroReq","moreThanZero","summaryFigs","SummaryCard","Card","CardContent","Box","g7root","flexGrow","Grid7","fcd","weekNum","FindGrid","direction","gridRoot","weekGrid","dayCell","dayText","findText","findZero","dayPaper","getDayHeader","width","dayName","dayNum","findStyles","noWrap","getSummaryInfo","App","Provider","CssBaseline","align","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.039e6a17.chunk.js","sourcesContent":["/** @format */\n\n// version number\n\nconst majorVersion = \"1\";\nconst minorVersion = \"6\";\nconst fixVersion = \"0\";\nconst addlVersion = \"\";\n\nexport const version = `${majorVersion}.${minorVersion}.${fixVersion}${addlVersion}`;\n","/** @format */\n\n// various convenience functions for dealing with the server\n\n// returns the api key used to contact the server\nconst getKey = () => {\n  return \"mEuqAh6oKH\";\n};\n\n// returns the server address without / on the end\nconst getServerAddr = () => {\n  return \"https://young-stream-78694.herokuapp.com\";\n};\n\n// returns a complete endpoint URL with the key attached as\n// the first parameter:\n// example: https://..../api/endpoint?key=....\n//\nconst getURL = (endpoint) => {\n  return `${getServerAddr()}/api/${endpoint}?key=${getKey()}`;\n};\n\n// returns the weather api address with the key attached as the first param\nexport const getWxURL = () => {\n  return getURL(\"weather\");\n};\n\n// returns the sunrise/sunset times api address with the key as the first param\nexport const getSunURL = () => {\n  return getURL(\"sun\");\n};\n\n// returns the holidays api address with the key as the first param\nexport const getHolidaysURL = () => {\n  return getURL(\"hday/all\");\n};\n\n// returns the find data api address with the key as the first param\nexport const getFindsURL = () => {\n  return getURL(\"all\");\n};\n\nexport const getFindsV2URL = () => {\n  return getURL(\"fc\");\n};\n\nexport const getServerVersionURL = () => {\n  return getURL(\"version\");\n};\n\nexport const getConfigURL = () => {\n  return getURL(\"config\");\n};\n","/** @format */\n\nimport { useEffect, useState } from \"react\";\n\n// list of the number of days that can be used to fill the grid\nexport const DayChoices = [\n  7,\n  14, // default\n  21,\n  30,\n];\n\n// implements a hook to set the days to be displayed and indicate when it\n// is loaded at startup.\n//\n// Based on code from:\n// https://css-tricks.com/a-dark-mode-toggle-with-react-and-themeprovider/\n\nexport const useDays = (defaultDays) => {\n  const [days, setInternalDays] = useState(defaultDays);\n\n  const setDaysAndStore = (d) => {\n    window.localStorage.setItem(\"days\", d);\n    setInternalDays(d);\n  };\n\n  const setDays = (d) => {\n    setDaysAndStore(d);\n  };\n\n  useEffect(() => {\n    const d = window.localStorage.getItem(\"days\");\n\n    if (d) {\n      setInternalDays(d);\n    }\n  }, []);\n\n  return [days, setDays];\n};\n","/** @format */\n\n// contains the green palette values\nimport Green from \"@material-ui/core/colors/green\";\nimport Red from \"@material-ui/core/colors/red\";\nimport Yellow from \"@material-ui/core/colors/yellow\";\nimport Gray from \"@material-ui/core/colors/grey\";\nimport Orange from \"@material-ui/core/colors/orange\";\n\nconst GreenPalette = {\n  name: \"Green\",\n  primary: {\n    light: \"#6abf69\",\n    main: \"#388e3c\",\n    dark: \"#00600f\",\n    headerText: \"#fff\",\n  },\n  background: {\n    default: Green[100],\n  },\n  find: {\n    noneReq: Green[400],\n    someReq: Red[500],\n  },\n  today: {\n    border: Green[700],\n    background: Orange[200],\n    number: Gray[500],\n  },\n  holiday: {\n    border: \"#1a237e\",\n  },\n  day: {\n    normBkgnd: \"white\",\n    altBkgnd: Yellow[50],\n    number: Gray[500],\n    altNumber: Gray[500],\n  },\n  summary: {\n    text: \"rgba(0, 0, 0, 0.87)\",\n    background: \"#white\",\n  },\n  type: \"light\",\n};\n\nexport default GreenPalette;\n","/** @format */\n\n// contains the teal palette values\nimport Green from \"@material-ui/core/colors/green\";\nimport Red from \"@material-ui/core/colors/red\";\nimport Gray from \"@material-ui/core/colors/grey\";\n\nconst TealPalette = {\n  name: \"Teal\",\n  primary: {\n    light: \"#52c7b8\",\n    main: \"#009688\",\n    dark: \"#00675b\",\n    headerText: \"#fff\",\n  },\n  background: {\n    default: \"#b2dfdb\",\n  },\n  find: {\n    noneReq: Green[400],\n    someReq: Red[500],\n  },\n  today: {\n    border: \"#009688\",\n    background: \"white\",\n    number: Gray[500],\n  },\n  holiday: {\n    border: \"#f50057\",\n  },\n  day: {\n    normBkgnd: \"white\",\n    altBkgnd: \"#fce4ec\",\n    // altBkgnd: Yellow[50],\n    number: Gray[500],\n    altNumber: Gray[500],\n  },\n  summary: {\n    text: \"rgba(0, 0, 0, 0.87)\",\n    background: \"#white\",\n  },\n  type: \"light\",\n};\n\nexport default TealPalette;\n","/** @format */\n\n// contains the teal palette values\nimport Green from \"@material-ui/core/colors/green\";\nimport Gray from \"@material-ui/core/colors/grey\";\n\nconst DarkPalette = {\n  name: \"Dark\",\n  primary: {\n    light: \"#484848\",\n    main: \"#000a12\",\n    dark: \"#000000\",\n    headerText: \"#fff\",\n  },\n  background: {\n    default: \"#263238\",\n  },\n  find: {\n    noneReq: Green[400],\n    // someReq: \"#039be5\",\n    someReq: \"#fff59d\",\n  },\n  today: {\n    border: \"#eceff1\",\n    background: \"#819ca9\",\n    number: \"#eceff1\",\n  },\n  holiday: {\n    border: \"#00e676\",\n  },\n  day: {\n    normBkgnd: \"#4f5b62\",\n    altBkgnd: \"#718792\",\n    number: Gray[500],\n    altNumber: \"black\",\n  },\n  summary: {\n    text: \"#eceff1\",\n    background: \"#4f5b62\",\n  },\n  type: \"dark\",\n};\n\nexport default DarkPalette;\n","/** @format */\n\n// contains the green palette values\nimport Gray from \"@material-ui/core/colors/grey\";\nimport Orange from \"@material-ui/core/colors/orange\";\n\nconst GrayPalette = {\n  name: \"Gray\",\n  primary: {\n    light: \"#6abf69\",\n    main: \"#3c3c3c\",\n    dark: \"#00600f\",\n    headerText: \"#8a8a8a\",\n  },\n  background: {\n    default: \"#1e1e1e\",\n  },\n  find: {\n    noneReq: Gray[500],\n    someReq: \"#e65100\",\n    altNoneReq: Gray[300],\n    altSomeReq: \"#3c3c3c\",\n  },\n  today: {\n    border: Orange[400],\n    background: \"#5c5c5c\",\n    number: Gray[500],\n  },\n  holiday: {\n    border: \"#03a9f4\",\n  },\n  day: {\n    normBkgnd: \"#5c5c5c\",\n    altBkgnd: Orange[400],\n    number: Gray[500],\n    altNumber: Gray[900],\n  },\n  summary: {\n    text: \"#8a8a8a\",\n    background: \"#3c3c3c\",\n  },\n  type: \"dark\",\n};\n\nexport default GrayPalette;\n","/** @format */\n\n// contains the green palette values\nimport Gray from \"@material-ui/core/colors/grey\";\n\nconst BluePalette = {\n  name: \"Blue\",\n  primary: {\n    light: \"#6abf69\",\n    main: \"#3f51b5\",\n    dark: \"#00600f\",\n    headerText: \"#76ff03\",\n  },\n  background: {\n    default: \"#3e3e3e\",\n  },\n  find: {\n    noneReq: Gray[600],\n    someReq: \"#b0ff57\",\n    altNoneReq: Gray[500],\n    altSomeReq: \"#3c3c3c\",\n  },\n  holiday: {\n    border: \"#f50057\",\n  },\n  today: {\n    border: \"#b2ff59\",\n    background: \"#aab6fe\",\n    number: Gray[800],\n  },\n  day: {\n    normBkgnd: \"#aab6fe\",\n    altBkgnd: \"#b2ff59\",\n    number: Gray[800],\n    altNumber: Gray[900],\n  },\n  summary: {\n    text: \"#1a1a1a\",\n    background: \"#909090\",\n  },\n  type: \"dark\",\n};\n\nexport default BluePalette;\n","/** @format */\n\n// contains the code to generate the custom theme\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// creates a custom theme using the properties of the given palette\nexport function generateTheme(newPalette) {\n  const theme = createMuiTheme({\n    palette: { ...newPalette },\n  });\n\n  return theme;\n}\n","/** @format */\n\n// convenience file for palette access\n\nimport GreenPalette from \"../Palettes/GreenPalette\";\nimport TealPalette from \"../Palettes/TealPalette\";\nimport DarkPalette from \"../Palettes/DarkPalette\";\nimport GrayPalette from \"../Palettes/GrayPalette\";\nimport BluePalette from \"../Palettes/BluePalette\";\n\nimport { generateTheme } from \"./GenerateTheme\";\n\n// all available themes\nexport const Themes = {\n  Blue: generateTheme(BluePalette),\n  Green: generateTheme(GreenPalette),\n  Teal: generateTheme(TealPalette),\n  Dark: generateTheme(DarkPalette),\n  Gray: generateTheme(GrayPalette),\n};\n\n// the array of theme names\nexport const ThemeNames = Object.keys(Themes).map(\n  (key) => Themes[key].palette.name\n);\n\n// themes as an array\nexport const ThemeArray = Object.keys(Themes).map((key) => Themes[key]);\n\nexport default Themes;\n","/** @format */\n\n// implements a hook to set the theme and indicate when it is loaded\n// at startup.\n//\n// Based on code from:\n// https://css-tricks.com/a-dark-mode-toggle-with-react-and-themeprovider/\n\nimport { useEffect, useState } from \"react\";\nimport { Themes } from \"./Themes\";\n\nexport const useCustomTheme = (defaultTheme) => {\n  const [theme, setInternalTheme] = useState(defaultTheme);\n  const [componentMounted, setComponentMounted] = useState(false);\n\n  const setCustomTheme = (customTheme) => {\n    // store just the name of the theme\n    window.localStorage.setItem(\"theme\", customTheme.palette.name);\n    setInternalTheme(customTheme);\n  };\n\n  // expects th is a theme\n  const setTheme = (th) => {\n    setCustomTheme(th);\n  };\n\n  useEffect(() => {\n    // get the name of the theme\n    const localThemeName = window.localStorage.getItem(\"theme\");\n\n    if (localThemeName) {\n      setInternalTheme(Themes[localThemeName]);\n    }\n    setComponentMounted(true);\n  }, []);\n\n  return [theme, setTheme, componentMounted];\n};\n","/** @format */\n\nconst { DateTime } = require(\"luxon\");\n\n//\n// Various date support functions\n//\n\n// creates a date string in the format MM-DD\n// does not error check the input\nexport function buildDate(month, day) {\n  const date =\n    month.toString().padStart(2, \"0\") + \"-\" + day.toString().padStart(2, \"0\");\n  return date;\n}\n\n// returns a string containing the given date in the format MM-DD\nexport function getFormattedDate(date) {\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  return buildDate(month, day);\n}\n\n// returns todays date in the format MM-DD\nexport function getToday() {\n  const today = new Date();\n  return getFormattedDate(today);\n}\n\n// returns the current hour as an integer: 0-23\nexport function getCurrentHour() {\n  const now = new Date();\n  return now.getHours();\n}\n\n// Returns the given number of days, beginning with the given start date. If startDate\n// or number is not valid, an empty array is returned.  The maximum number of dates\n// returned is the complete array (366)\nexport function getDates(startDate, number, counts) {\n  let result = {\n    startDate: startDate,\n    number: number,\n    status: \"fail\",\n    dates: [],\n    goal: 0,\n  };\n\n  // parse the number, if not a number, return an error\n  let num = parseInt(number, 10);\n  if (isNaN(num)) {\n    return result;\n  }\n\n  // if the requested number of days is more than one year,\n  // set it to one year\n  const len = counts.dates.length;\n  if (num > len) {\n    num = len;\n    result.number = num;\n  }\n\n  const indices = getNDayIndices(startDate, result.number, counts);\n\n  if (indices.length < 1) {\n    return result;\n  }\n\n  const dayNames = getDayNames(startDate, result.number);\n\n  for (let i = 0; i < num; i++) {\n    const index = indices[i];\n    const d = counts.dates[index];\n    d.dayname = dayNames[i];\n    result.dates.push(d);\n  }\n\n  result.goal = counts.goal;\n  result.status = \"ok\";\n\n  return result;\n}\n\n// Convenience function that returns an array of the indices of the\n// given number of days, starting with today\n// Inputs:\n//   startDate: starting date in the format MM-dd\n//   num: number of days\n//   counts: the raw find data\n// Returns:\n//   array of date indices on success,\n//   empty array on failure\nexport function getNDayIndices(startDate, num, counts) {\n  let indices = [];\n\n  const today = DateTime.local();\n  let day = DateTime.local(\n    today.year,\n    getMonthFromDate(startDate),\n    getDayOfMonth(startDate)\n  );\n\n  for (let i = 0; i < num; i++) {\n    const d = day.toFormat(\"MM-dd\");\n\n    if (d in counts.dateIndex) {\n      indices.push(counts.dateIndex[d]);\n    } else {\n      return [];\n    }\n\n    day = day.plus({ days: 1 });\n  }\n\n  return indices;\n}\n\n// Convenience function that returns the next 14 days\nexport function get14Days(counts) {\n  return getNDays(14, counts);\n}\n\n// Convenience function that returns the next num days\nexport function getNDays(num, counts) {\n  return getDates(getToday(), num, counts);\n}\n\n// Returns an array of strings containing the names of the\n// next <number> days, beginning with the given start date\n// in the current year.\n// startDate: date in the form MM-DD\n// number: integer number of days\nexport function getDayNames(startDate, number) {\n  const names = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  let result = [];\n\n  // get the starting day in this year\n  const year = new Date().getFullYear().toString();\n  const sd = new Date(startDate + \"-\" + year);\n  const startDoW = sd.getDay();\n\n  for (let i = 0; i < number; i++) {\n    let index = (startDoW + i) % names.length;\n    result.push(names[index]);\n  }\n\n  return result;\n}\n\n// returns the number of finds required in the next 7 days\n// dates: array of dates with findcounts, if length is less than 7,\n//        zero is returned.\n// goal: the desired minimum number of finds in the next 7 days,\n//       must be greater than zero\nexport function getReqFindsNextWeek(dates, goal) {\n  let result = 0;\n  let days = 0;\n\n  if (dates.length < 7 || goal < 1) {\n    return result;\n  }\n\n  for (let i = 0; i < 7; i++) {\n    if (dates[i].total_finds < goal) {\n      result += goal - dates[i].total_finds;\n      days++;\n    }\n  }\n\n  if (result !== 0) {\n    return `${result} -- (${days} day${days > 1 ? \"s\" : \"\"})`;\n  } else {\n    return result;\n  }\n}\n\n// Helper function that returns the day of the month as an integer.\n//\n// Input: string containing the date in the format MM-DD\n//\n// Output: integer day of the month for the given date\nexport function getDayOfMonth(date) {\n  // 01234\n  // MM-DD\n  const dayString = date.substring(3);\n  const parsed = parseInt(dayString, 10);\n\n  if (isNaN(parsed)) {\n    return 0;\n  }\n\n  return parsed;\n}\n\n// Helper function that returns the month as an integer.\n//\n// Input: string containing the date in the format MM-DD\n//\n// Output: month for the given date\nexport function getMonthFromDate(date) {\n  // 01234\n  // MM-DD\n  const monthString = date.substring(0, 2);\n  const parsed = parseInt(monthString, 10);\n\n  if (isNaN(parsed)) {\n    return 0;\n  }\n\n  return parsed;\n}\n// Helper function to return the month as a three-character string\n//\n// Input: string containing the date in the format MM-DD\n//\n// Output: 3-character string representing the month for the given date\nexport function getShortMonthName(date) {\n  return getMonthName(date, true);\n}\n\n// Helper function to get the name of the month represented by the date. The\n// returned name can be either a short 3-char string or the full name.\n//\n// Inputs: date, string in the format MM-DD\n//         short: boolean, true indicates short name, otherwise full\n//\n// Output: string containing the string representation of the month\nfunction getMonthName(date, short) {\n  // 01234\n  // MM-DD\n  const month = parseInt(date.substring(0, 2), 10);\n  const monthNames = [\n    { short: \"dummy\", long: \"dummy\" },\n    { short: \"Jan\", long: \"January\" },\n    { short: \"Feb\", long: \"February\" },\n    { short: \"Mar\", long: \"March\" },\n    { short: \"Apr\", long: \"April\" },\n    { short: \"May\", long: \"May\" },\n    { short: \"Jun\", long: \"June\" },\n    { short: \"Jul\", long: \"July\" },\n    { short: \"Aug\", long: \"August\" },\n    { short: \"Sep\", long: \"September\" },\n    { short: \"Oct\", long: \"October\" },\n    { short: \"Nov\", long: \"November\" },\n    { short: \"Dec\", long: \"December\" },\n  ];\n\n  if (isNaN(month) || month < 1 || month > 12) {\n    return \"\";\n  }\n\n  return short ? monthNames[month].short : monthNames[month].long;\n}\n\nexport function getLongDateText(date) {\n  if (date) {\n    return `${getDayOfMonth(date)} ${getMonthName(date)}`;\n  } else {\n    return \"\";\n  }\n}\n\n// returns an array of 7 days for the current week\n// input: the count data\nexport function getCurrentWeek(counts) {\n  // get the day of the week of today and use it\n  // to get the first day of the week\n  const today = DateTime.local();\n  const dayOfWeek = today.weekday; // note: Sunday = 7, Monday = 1, Tue = 2\n  const startOfWeek =\n    dayOfWeek === 7 ? today : today.minus({ days: dayOfWeek });\n  const date = startOfWeek.toFormat(\"MM-dd\");\n\n  return getDates(date, 7, counts);\n}\n\n// adds the offset to the current date and returns the result\n// in the format: YYYY-MM-DD\n//\n// input: the number of days in the future, 0 = today, 1= tomorrow, etc.\nexport function getFullDate(offset) {\n  const today = DateTime.local();\n  const newDay = today.plus({ days: offset });\n  return newDay.toFormat(\"yyyy-MM-dd\");\n}\n","/** @format */\n\nimport { useState, useEffect } from \"react\";\nimport { createContainer } from \"unstated-next\";\nimport { version } from \"./Version\";\nimport {\n  getServerVersionURL,\n  getHolidaysURL,\n  getConfigURL,\n  getFindsV2URL,\n  getSunURL,\n  getWxURL,\n} from \"./Server\";\nimport axios from \"axios\";\nimport { useDays } from \"./Days\";\nimport { Themes } from \"../theme/Themes\";\nimport { useCustomTheme } from \"../theme/useCustomTheme\";\nimport * as df from \"./dates\";\n\nexport const useStore = () => {\n  const defaultDays = 21;\n\n  const [theme, setTheme, componentMounted] = useCustomTheme(Themes.Green);\n  const [toDoOpen, setToDoOpen] = useState(false);\n  const [toDoWeek, setToDoWeek] = useState({ dates: [], goal: 0, number: 0 });\n  const [detailIsOpen, setDetailIsOpen] = useState(false);\n  const [clickedDate, setClickedDate] = useState(\"\");\n  const [days, setDays] = useDays(defaultDays);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [findData, setFindData] = useState({});\n  const [holidays, setHolidays] = useState({});\n  const [serverVersion, setServerVersion] = useState(\"0.0.0\");\n  const [config, setConfig] = useState({\n    pq_time: \"\",\n    update_time: \"\",\n    goal: 4,\n  });\n  const [position, setPosition] = useState({\n    status: \"fail\",\n    latitude: 0,\n    longitude: 0,\n  });\n  const [appVersion, setAppVersion] = useState(version);\n  const [sunTimes, setSunTimes] = useState({\n    results: {\n      sunrise: \"\",\n      sunset: \"\",\n    },\n    status: \"fail\",\n  });\n  const [sunTimesLoaded, setSunTimesLoaded] = useState(false);\n\n  const [weatherIsLoaded, setWeatherIsLoaded] = useState(false);\n  const [weather, setWeather] = useState({});\n\n  useEffect(() => {\n    // get the server version\n    axios.get(getServerVersionURL()).then((res) => {\n      setServerVersion(res.data.version);\n    });\n  }, []);\n\n  useEffect(() => {\n    // get the position if possible\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition((pos) => {\n        setPosition({\n          status: \"ok\",\n          latitude: pos.coords.latitude,\n          longitude: pos.coords.longitude,\n        });\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    // get the sunrise/sunset times\n    const sunLoc = `lat=${position.latitude}&lon=${position.longitude}`;\n    const qDT = df.getFullDate(clickedDate.offset);\n\n    const sunURL = `${getSunURL()}&${sunLoc}&date=${qDT}`;\n\n    axios.get(sunURL).then((response) => {\n      // console.log(\"sun times:\");\n      // console.log(response.data);\n      setSunTimes(response.data);\n      setSunTimesLoaded(true);\n    });\n  }, [position, clickedDate.offset]);\n\n  useEffect(() => {\n    // get the holidays\n    axios.get(getHolidaysURL()).then((res) => {\n      setHolidays(res.data);\n    });\n  }, []);\n\n  // get the configuration info\n  useEffect(() => {\n    axios.get(getConfigURL()).then((res) => {\n      setConfig(res.data);\n      // console.log(res.data);\n    });\n  }, []);\n\n  // get the find data\n  useEffect(() => {\n    // get the find data\n    axios.get(getFindsV2URL()).then((res) => {\n      setFindData(res.data);\n      setDataLoaded(true);\n    });\n  }, []);\n\n  useEffect(() => {\n    const location = `loc=${position.latitude},${position.longitude}`;\n    const qDT = df.getFullDate(clickedDate.offset);\n\n    // getWxURL: https://..../api/weather?key=...\n    const wxURL = `${getWxURL()}&${location}&dt=${qDT}`;\n\n    axios.get(wxURL).then((response) => {\n      setWeather(response.data);\n      setWeatherIsLoaded(true);\n    });\n  }, [position, clickedDate.offset]);\n\n  return {\n    dataLoaded,\n    findData,\n    setFindData,\n    holidays,\n    serverVersion,\n    config,\n    position,\n    appVersion,\n    setAppVersion,\n    days,\n    setDays,\n    theme,\n    setTheme,\n    componentMounted,\n    toDoOpen,\n    setToDoOpen,\n    toDoWeek,\n    setToDoWeek,\n    detailIsOpen,\n    setDetailIsOpen,\n    clickedDate,\n    setClickedDate,\n    sunTimes,\n    sunTimesLoaded,\n    weather,\n    weatherIsLoaded,\n  };\n};\n\nexport const StoreContainer = createContainer(useStore);\n","/** @format */\n\n// contains methods for retrieving and formatting data\n\nimport { createContainer } from \"unstated-next\";\nimport { StoreContainer } from \"./store\";\nimport * as df from \"./dates\";\n\nexport const useDataEngine = () => {\n  const store = StoreContainer.useContainer();\n\n  // get the goal from configuration\n  const getGoal = () => {\n    return store.config.goal;\n  };\n\n  // get the index of a date, not exported\n  const getDateIndex = (date) => {\n    if (date in store.findData.dateIndex) {\n      return store.findData.dateIndex[date];\n    }\n  };\n\n  // returns the total number of finds for the given date\n  const getTotalFinds = (date) => {\n    const index = getDateIndex(date);\n\n    if (index === \"\") {\n      return -1;\n    }\n\n    return store.findData.dates[index].total_finds;\n  };\n\n  // returns the number of lab finds for the given date\n  const getLabFinds = (date) => {\n    const index = getDateIndex(date);\n\n    if (index === \"\") {\n      return -1;\n    }\n\n    return store.findData.dates[index].lab_finds;\n  };\n\n  // returns the number of normal finds for the given date\n  const getNormalFinds = (date) => {\n    const index = getDateIndex(date);\n\n    if (index === \"\") {\n      return -1;\n    }\n\n    return store.findData.dates[index].norm_finds;\n  };\n\n  // returns the number of find required for the given date.\n  // if the current count exceeds the goal, zero is returned\n  const getNumToFind = (date) => {\n    const f = getGoal() - getTotalFinds(date);\n    return f < 0 ? \"0\" : f;\n  };\n\n  // convenience function to return find data for a given date\n  const getDayFindData = (date) => {\n    if (date) {\n      return {\n        numToFind: getNumToFind(date),\n        totalFinds: getTotalFinds(date),\n        normalFinds: getNormalFinds(date),\n        labFinds: getLabFinds(date),\n        goal: getGoal(),\n      };\n    } else {\n      return {\n        numToFind: 0,\n        totalFinds: 0,\n        normalFinds: 0,\n        labFinds: 0,\n        goal: 0,\n      };\n    }\n  };\n\n  // returns the find count data and summary for the given number of days\n  // days: number of days to get data for\n  const getFindCountData = (days) => {\n    const data = df.getNDays(days, store.findData);\n    const summaryInfo = {\n      generated: new Date(store.config.pq_time).toLocaleString(),\n      goal: getGoal(),\n      next7days: df.getReqFindsNextWeek(data.dates, getGoal()),\n    };\n\n    return {\n      data: data,\n      summary: summaryInfo,\n    };\n  };\n\n  return {\n    getGoal,\n    getTotalFinds,\n    getLabFinds,\n    getNormalFinds,\n    getNumToFind,\n    getDayFindData,\n    getFindCountData,\n  };\n};\n\nexport const DataEngine = createContainer(useDataEngine);\n","/** @format */\n\n// helper methods for dealing with geo-locations\n\n// returns a nicely formatted geolocation in the format:\n// (N|S) DD MM.mmm (E|W) DDD MM.mmm\nexport function getFormattedGeoLoc(pos) {\n  return `${getFormattedLatitude(pos.latitude)}, ${getFormattedLongitude(\n    pos.longitude\n  )}`;\n}\n\nexport function getFormattedLatitude(lat) {\n  const dir = lat >= 0 ? \"N\" : \"S\";\n  return `${dir} ${convertToDegMinutes(lat)}`;\n}\n\nexport function getFormattedLongitude(lon) {\n  const dir = lon >= 0 ? \"E\" : \"W\";\n  return `${dir} ${convertToDegMinutes(lon)}`;\n}\n\n// converts decimal degrees to degrees and decimal minutes\n// returns a string in the format: [D][D]D MM.mmm (any - sign is removed)\nexport function convertToDegMinutes(dd) {\n  let deg = dd | 0; // truncate to get degrees without sign\n  const frac = Math.abs(dd - deg); // get fractional part\n  let min = frac * 60; // get the minutes\n\n  // check to see if the minutes round up to more than a whole degree\n  if (min >= 60.0) {\n    deg++;\n    min = min - 60.0;\n  }\n\n  return `${Math.abs(deg)}° ${min.toFixed(3)}`;\n}\n\n// converts a position object to a string suitable for use with the\n// geocaching.com browse map in the format YY.YYYYY,XXX.XXXXXX where\n// Y is the digits of latitude and X is the digits of longitude\nexport function convertToString(pos) {\n  return `${pos.latitude.toFixed(6)},${pos.longitude.toFixed(6)}`;\n}\n","/** @format */\n\n// geocaching.com link helper functions\n\nimport * as geo from \"./Geoloc\";\n\n// basic search URL\n// https://www.geocaching.com/play/search?origin=N+41%c2%b0+1.366,+W+111%c2%b0+56.419&nfb[0]=llenseuqm&f=2&o=2&utr=false\n\n// creates a URL for the geocaching.com search interface\nexport function getGCSearchURL(loc) {\n  const baseURL = \"https://www.geocaching.com/play/search\";\n  const userParam = \"nfb[0]=llenseuqm\";\n  const foundByUser = \"f=2\";\n  const ownedByUser = \"o=2\";\n  const utr = \"utr=false\";\n\n  // create the origin parameter by replacing spaces with +\n  const origin = \"origin=\" + loc.replace(/\\s/g, \"+\");\n\n  // build the URL and return\n  return `${baseURL}?${origin}&${userParam}&${foundByUser}&${ownedByUser}&${utr}`;\n}\n\n// browse map URL\n// https://www.geocaching.com/map/#?ll=41.022767,-111.940317&z=14\n// input: position object having latitude and longitude fields\nexport function getGCBrowseMapURL(pos) {\n  const baseURL = \"https://www.geocaching.com/map/#\";\n  const ll = `ll=${geo.convertToString(pos)}`;\n  const zoom = \"z=14\";\n\n  return `${baseURL}?${ll}&${zoom}`;\n}\n","/** @format */\n\n// functions for manipulating and formatting the sunrise, sunset times\n\nexport function getLocalSunriseTime(sun) {\n  if (sun.status !== \"OK\") {\n    return \"UNKNOWN\";\n  }\n\n  return getLocaleTime(sun.results.sunrise);\n}\n\nexport function getLocalSunsetTime(sun) {\n  if (sun.status !== \"OK\") {\n    return \"UNKNOWN\";\n  }\n\n  return getLocaleTime(sun.results.sunset);\n}\n\nfunction getLocaleTime(t) {\n  const d = new Date(t);\n  return d.toLocaleTimeString();\n}\n\nexport function getAPIurl() {\n  return \"https://sunrise-sunset.org/api\";\n}\n","/** @format */\n\n// implements the details dialog\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Brightness2Icon from \"@material-ui/icons/Brightness2\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport GpsFixedIcon from \"@material-ui/icons/GpsFixed\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport React from \"react\";\nimport { DataEngine } from \"../infrastructure/DataEngine\";\nimport * as df from \"../infrastructure/dates\";\nimport { getGCBrowseMapURL, getGCSearchURL } from \"../infrastructure/GCLinks\";\nimport { getFormattedGeoLoc } from \"../infrastructure/Geoloc\";\nimport { StoreContainer } from \"../infrastructure/store\";\nimport * as st from \"../infrastructure/SunTimes\";\n\nfunction DayDetail() {\n  const store = StoreContainer.useContainer();\n  const dataEngine = DataEngine.useContainer();\n  const date = store.clickedDate.day;\n  const dayFindData = dataEngine.getDayFindData(date);\n\n  const useStyles = makeStyles((theme) => ({\n    root: {},\n    content: {\n      minWidth: \"300px\",\n      backgroundColor: theme.palette.day.normBkgnd,\n      padding: \"10px\",\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.day.number,\n      padding: \"5px\",\n    },\n    paper: {\n      padding: \"10px\",\n    },\n    spacer: {\n      height: \"10px\",\n    },\n    apilink: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n    },\n    finds: {\n      paddingLeft: \"10px\",\n      color:\n        dayFindData.numToFind > 0\n          ? theme.palette.find.someReq\n          : theme.palette.find.noneReq,\n    },\n    numtofind: {\n      display: \"flex\",\n    },\n    gclinksdiv: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n    },\n    gclink: {\n      color: theme.palette.day.altBkgnd,\n      paddingLeft: \"20px\",\n    },\n    weatherFact: {\n      paddingLeft: \"15px\",\n    },\n    sun: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    suntime: {\n      paddingLeft: \"10px\",\n    },\n    holiday: {\n      color: theme.palette.holiday.border,\n    },\n  }));\n\n  const classes = useStyles();\n\n  const handleClose = () => {\n    store.setDetailIsOpen(false);\n  };\n\n  const getCurrentWeather = () => {\n    // if the selected day is not today, then the current weather is not displayed\n    if (!store.clickedDate.today) {\n      return <></>;\n    } else {\n      const weather = store.weather;\n      const currentTemp = `${weather.current.temp_f.toFixed(\n        0\n      )}, feels like: ${weather.current.feelslike_f.toFixed(0)} °F`;\n      const currentIcon = `https:${weather.current.condition.icon}`;\n      const currentWind = `${weather.current.wind_mph.toFixed(\n        0\n      )}, gust: ${weather.current.gust_mph.toFixed(0)} MPH`;\n      return (\n        <>\n          <div className={classes.spacer}></div>\n          <Typography>Current weather in {weather.location.name}:</Typography>\n          <Typography className={classes.weatherFact}>\n            Temp: {currentTemp}\n          </Typography>\n          <Typography className={classes.weatherFact}>\n            Wind: {currentWind}\n          </Typography>\n          <Typography className={classes.weatherFact}>\n            {weather.current.condition.text}\n          </Typography>\n          <div className={classes.weatherFact}>\n            <img src={currentIcon} alt=\"weather\"></img>\n          </div>\n        </>\n      );\n    }\n  };\n\n  // returns true if the weather object contains a forecast\n  const isForecastAvailable = () => {\n    try {\n      if (store.weather.forecast.forecastday.length > 0) {\n        return true;\n      }\n    } catch {\n      // ignore the error\n    }\n\n    return false;\n  };\n\n  const getForecastWeather = () => {\n    // if there is no forecast available (API docs say 10 days in the future\n    // but it seems to work for something like 16)\n    if (!isForecastAvailable()) {\n      return <></>;\n    }\n\n    const forecast = store.weather.forecast.forecastday[0];\n    const temps = `High/Low: ${forecast.day.maxtemp_f.toFixed(\n      0\n    )}/${forecast.day.mintemp_f.toFixed(0)} °F`;\n\n    // get the current hour and use it to get the forecast for the next hour\n    // this will seem more representative of the coming weather\n    let hour = df.getCurrentHour();\n\n    if (hour < 23) {\n      hour++;\n    }\n\n    const forecastHour = store.weather.forecast.forecastday[0].hour[hour];\n\n    const condition = `${forecastHour.condition.text}`;\n    const icon = `https:${forecastHour.condition.icon}`;\n    const precipChance = `Chance Precip: ${forecast.day.daily_chance_of_rain}%`;\n    const snowChance = `Chance Snow: ${forecast.day.daily_chance_of_snow}%`;\n    const maxWind = `Max. Wind: ${forecast.day.maxwind_mph.toFixed(0)} MPH`;\n    const uv = `UV Index: ${forecast.day.uv}`;\n\n    return (\n      <>\n        <Typography>Forecast:</Typography>\n        <Typography className={classes.weatherFact}>{temps}</Typography>\n        <Typography className={classes.weatherFact}>{maxWind}</Typography>\n        <Typography className={classes.weatherFact}>{precipChance}</Typography>\n        <Typography className={classes.weatherFact}>{snowChance}</Typography>\n        <Typography className={classes.weatherFact}>{uv}</Typography>\n        <Typography className={classes.weatherFact}>{condition}</Typography>\n        <div className={classes.weatherFact}>\n          <img src={icon} alt=\"weather\"></img>\n        </div>\n      </>\n    );\n  };\n\n  const getSunTimes = () => {\n    let sunrise = \"\";\n    let sunset = \"\";\n\n    // if the weather forecast is available, use the info from it, otherwise\n    // use the free api\n    if (isForecastAvailable()) {\n      sunrise = store.weather.forecast.forecastday[0].astro.sunrise;\n      sunset = store.weather.forecast.forecastday[0].astro.sunset;\n    } else {\n      if (store.sunTimesLoaded) {\n        sunrise = st.getLocalSunriseTime(store.sunTimes);\n        sunset = st.getLocalSunsetTime(store.sunTimes);\n      } else {\n        sunrise = \"N/A\";\n        sunset = \"N/A\";\n      }\n    }\n    return (\n      <>\n        <div className={classes.sun}>\n          <WbSunnyIcon fontSize=\"small\" />\n          <Typography\n            className={classes.suntime}>{`Sunrise: ${sunrise}`}</Typography>\n        </div>\n        <div className={classes.sun}>\n          <Brightness2Icon fontSize=\"small\" />\n          <Typography\n            className={classes.suntime}>{`Sunset: ${sunset}`}</Typography>\n        </div>\n      </>\n    );\n  };\n\n  const getSunAPILink = () => {\n    // configure the link depending on which API is used\n\n    let linkHref = \"\";\n    let linkText = \"\";\n\n    if (isForecastAvailable()) {\n      linkHref = \"https://www.weatherapi.com/\";\n      linkText = \"WeatherAPI.com\";\n    } else {\n      linkHref = st.getAPIurl();\n      linkText = \"Sunrise/Sunset API\";\n    }\n\n    return (\n      <>\n        <div className={classes.spacer}></div>\n        <div className={classes.spacer}></div>\n        <Link\n          className={classes.apilink}\n          href={linkHref}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          color=\"textSecondary\"\n          variant=\"body2\"\n          underline=\"always\">\n          {linkText}\n        </Link>\n      </>\n    );\n  };\n\n  const getWeatherInfo = () => {\n    // if there is no weather info at all:\n    if (!store.weather) {\n      return (\n        <>\n          <Typography>Weather Not Available</Typography>\n        </>\n      );\n    }\n\n    return (\n      <>\n        {getCurrentWeather()}\n        {getForecastWeather()}\n      </>\n    );\n  };\n\n  const getGeolocItems = () => {\n    // if the position is not available, don't render anything\n    // that needs it\n    if (store.position.status === \"ok\") {\n      const loc = getFormattedGeoLoc(store.position);\n      return (\n        <>\n          <div className={classes.spacer}></div>\n          <div className={classes.sun}>\n            <GpsFixedIcon fontSize=\"small\" />\n            <Typography className={classes.suntime}>\n              Location: {`${loc}`}\n            </Typography>\n          </div>\n          <div className={classes.gclinksdiv}>\n            <Link\n              className={classes.gclink}\n              href={`${getGCSearchURL(loc)}`}\n              target=\"_blank\"\n              rel=\"nonreferrer\"\n              underline=\"always\">\n              Search\n            </Link>\n            <Link\n              className={classes.gclink}\n              href={getGCBrowseMapURL(store.position)}\n              underline=\"always\"\n              target=\"_blank\"\n              rel=\"nonreferrer\">\n              GC Map\n            </Link>\n          </div>\n          <div className={classes.spacer}></div>\n          {getSunTimes()}\n          <div className={classes.spacer}></div>\n          {getWeatherInfo()}\n          {getSunAPILink()}\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Typography>Location: unavailable</Typography>\n        </>\n      );\n    }\n  };\n\n  const getHoliday = () => {\n    if (!store.clickedDate.holiday) {\n      return \"\";\n    }\n\n    return (\n      <>\n        <div className={classes.spacer}></div>\n        <Typography\n          className={\n            classes.holiday\n          }>{`${store.clickedDate.holidayName}`}</Typography>\n      </>\n    );\n  };\n\n  if (!store.weatherIsLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <>\n        <Dialog\n          onClose={handleClose}\n          open={store.detailIsOpen}\n          className={classes.root}>\n          <div className={classes.content}>\n            <DialogTitle id=\"daydetailtitle\">\n              {`${df.getLongDateText(date)}`}\n              <IconButton className={classes.closeButton} onClick={handleClose}>\n                <CloseIcon />\n              </IconButton>\n            </DialogTitle>\n            <Paper elevation={3} className={classes.paper}>\n              <Typography>\n                Total finds: {`${dayFindData.totalFinds}`}\n              </Typography>\n              <Typography>\n                Normal finds: {`${dayFindData.normalFinds}`}\n              </Typography>\n              <Typography>Lab finds: {`${dayFindData.labFinds}`}</Typography>\n              <Typography>Goal: {`${dayFindData.goal}`}</Typography>\n              <div className={classes.numtofind}>\n                <Typography>Number to find: </Typography>\n                <Typography\n                  className={\n                    classes.finds\n                  }>{`${dayFindData.numToFind}`}</Typography>\n              </div>\n              {getHoliday()}\n              {getGeolocItems()}\n            </Paper>\n          </div>\n        </Dialog>\n      </>\n    );\n  }\n}\n\nexport default DayDetail;\n","/** @format */\n\nimport React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, withTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { ThemeArray } from \"../theme/Themes\";\nimport PaletteIcon from \"@material-ui/icons/Palette\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { DayChoices } from \"../infrastructure/Days\";\nimport ViewWeekRoundedIcon from \"@material-ui/icons/ViewWeekRounded\";\nimport { StoreContainer } from \"../infrastructure/store\";\nimport { getCurrentWeek } from \"../infrastructure/dates\";\n\nconst FindCountHeader = (props) => {\n  const store = StoreContainer.useContainer();\n\n  const small = useMediaQuery(props.theme.breakpoints.down(\"sm\"));\n  const titleText = small ? \"Finds\" : \"Cache Find Counts\";\n\n  const useStyles = makeStyles(() => ({\n    text: {\n      flex: 1,\n      color: props.theme.palette.primary.headerText,\n    },\n    spacer: {\n      height: \"10px\",\n    },\n    formControl: {\n      paddingRight: \"10px\",\n      paddingLeft: \"5px\",\n    },\n    selectText: {\n      color: props.theme.palette.primary.headerText,\n    },\n    nextText: {\n      color: props.theme.palette.primary.headerText,\n\n      paddingLeft: \"7px\",\n      paddingRight: \"7px\",\n    },\n    barText: {\n      color: props.theme.palette.primary.headerText,\n\n      paddingLeft: \"5px\",\n      paddingRight: \"15px\",\n    },\n    icon: {\n      color: props.theme.palette.primary.headerText,\n    },\n    weekIcon: {\n      paddingRight: \"10px\",\n      cursor: \"pointer\",\n    },\n  }));\n  const classes = useStyles();\n\n  const nextText = () => {\n    if (small) {\n      return \"\";\n    }\n\n    return <Typography className={classes.nextText}>Next:</Typography>;\n  };\n\n  const changeTheme = (event) => {\n    store.setTheme(event.target.value);\n  };\n\n  const handleWeek = () => {\n    const week = getCurrentWeek(store.findData);\n\n    store.setToDoWeek({ ...week, goal: store.config.goal });\n    store.setToDoOpen(true);\n  };\n\n  const changeDays = (event) => {\n    store.setDays(event.target.value);\n  };\n\n  return (\n    <>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography className={classes.text}>{titleText}</Typography>\n          <ViewWeekRoundedIcon\n            className={`${classes.icon} ${classes.weekIcon}`}\n            onClick={handleWeek}\n          />\n          <Typography className={classes.barText}>|</Typography>\n\n          <DateRangeIcon className={classes.icon} />\n          {nextText()}\n          <FormControl className={classes.formControl}>\n            <Select\n              disableUnderline\n              classes={{ icon: classes.selectText, root: classes.selectText }}\n              labelId=\"rangeLabel\"\n              id=\"rangeSelect\"\n              value={store.days}\n              onChange={changeDays}>\n              {DayChoices.map((d) => {\n                return (\n                  <MenuItem key={d} value={d}>\n                    {`${d} days`}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n          <Typography className={classes.barText}>|</Typography>\n          <PaletteIcon className={classes.icon} />\n          <FormControl className={classes.formControl}>\n            <Select\n              disableUnderline\n              classes={{ icon: classes.selectText, root: classes.selectText }}\n              labelId=\"themeLabel\"\n              id=\"themeSelect\"\n              value={props.theme}\n              onChange={changeTheme}>\n              {ThemeArray.map((th) => {\n                return (\n                  <MenuItem key={th.palette.name} value={th}>\n                    {th.palette.name}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.spacer}></div>\n    </>\n  );\n};\n\nexport default withTheme(FindCountHeader);\n","/** @format */\n\n// Implements the individual cells in the header row\n\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  dayRoot: {\n    textAlign: \"center\",\n    color: theme.palette.primary.headerText,\n  },\n}));\n\n// expects a property named text containing a string to place in the cell\nconst HeaderDay = (props) => {\n  const classes = useStyles();\n  const { text } = props;\n\n  return (\n    <>\n      <Typography className={classes.dayRoot}>{text}</Typography>\n    </>\n  );\n};\n\nexport default HeaderDay;\n","/** @format */\n\n// implements the header of Grid7, consisting of 7 HeaderDay cells\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport HeaderDay from \"./HeaderDay\";\n\nconst useStyles = makeStyles((theme) => ({\n  headerRoot: {\n    display: \"flex\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  cell: {\n    borderStyle: \"solid\",\n    borderWidth: \"2px\",\n    borderColor: theme.palette.background.default,\n    backgroundColor: theme.palette.primary.main,\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n  },\n}));\n\n// expects a property named values that is an array containing\n// seven day header values\nconst Header = (props) => {\n  const classes = useStyles();\n  const { values } = props;\n\n  const getHeaderCell = (value) => {\n    return (\n      <Grid item className={classes.cell} key={value} xs={12}>\n        <HeaderDay text={value} />\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <Grid item container className={classes.headerRoot}>\n        {values.map((value) => getHeaderCell(value))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Header;\n","/** @format */\n\n// implements the invidual days in a row\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, withTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\n// expects the following properties:\n//   number: the number of the date\n//   text: the main text to be displayed\n//   subtext: smaller text to be displayed\n//   status: unused|ok|low\n//   today: boolean indicating whether this date is today\n//   monthFlag: boolean indicating whether this cell should be the\n//              primary month color or the alternative month color\nconst DayCell = (props) => {\n  const { number, text, subtext, status, today, monthFlag } = props.value;\n  const theme = props.theme;\n\n  let normalBkgnd = theme.palette.day.normBkgnd;\n  let normalNumClr = theme.palette.day.number;\n  let someReqNormClr = theme.palette.find.someReq;\n  let noneReqNormClr = theme.palette.find.noneReq;\n\n  if (monthFlag) {\n    normalBkgnd = theme.palette.day.altBkgnd;\n    normalNumClr = theme.palette.day.altNumber;\n\n    if (theme.palette.find.altNoneReq) {\n      noneReqNormClr = theme.palette.find.altNoneReq;\n    }\n\n    if (theme.palette.find.altSomeReq) {\n      someReqNormClr = theme.palette.find.altSomeReq;\n    }\n  }\n\n  const colors = {\n    unused: {\n      backgroundColor: theme.palette.background.default,\n      numberColor: theme.palette.background.default,\n      findColor: theme.palette.background.default,\n    },\n    ok: {\n      backgroundColor: normalBkgnd,\n      numberColor: normalNumClr,\n      findColor: noneReqNormClr,\n    },\n    low: {\n      backgroundColor: normalBkgnd,\n      numberColor: normalNumClr,\n      findColor: someReqNormClr,\n    },\n    today: {\n      backgroundColor: theme.palette.today.background,\n      numberColor: theme.palette.today.number,\n    },\n  };\n\n  let backgroundColor = colors.today.backgroundColor;\n  let numberColor = colors.today.numberColor;\n\n  if (!today) {\n    backgroundColor = colors[status].backgroundColor;\n    numberColor = colors[status].numberColor;\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    cellRoot: {\n      display: \"flex\",\n      backgroundColor: backgroundColor,\n      height: \"100px\",\n      [theme.breakpoints.down(\"sm\")]: { flexDirection: \"column\" },\n      [theme.breakpoints.down(\"sm\")]: { justifyContent: \"space-between\" },\n      [theme.breakpoints.up(\"md\")]: { flexDirection: \"row\" },\n      cursor: \"pointer\",\n    },\n    cellNumber: {\n      color: numberColor,\n      paddingLeft: \"4px\",\n    },\n    cellText: {},\n    cellSubText: {},\n    finds: {\n      color: colors[status].findColor,\n      [theme.breakpoints.up(\"md\")]: { paddingTop: \"15px\" },\n      [theme.breakpoints.down(\"sm\")]: { paddingLeft: \"7px\" },\n      textAlign: \"center\",\n      justifyContent: \"center\",\n      alignContent: \"center\",\n    },\n    checkPad: {\n      [theme.breakpoints.up(\"md\")]: { paddingTop: \"10px\" },\n    },\n  }));\n\n  const classes = useStyles();\n\n  const getFindContent = () => {\n    if (status === \"ok\") {\n      return (\n        <>\n          <div className={classes.checkPad}></div>\n          <CheckIcon fontSize=\"large\" />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Typography variant=\"h4\" className={classes.cellText}>\n            {text}\n          </Typography>\n          <Typography variant=\"subtitle2\" className={classes.cellSubText}>\n            {subtext}\n          </Typography>\n        </>\n      );\n    }\n  };\n\n  return (\n    <>\n      <Grid item container className={classes.cellRoot}>\n        <Grid item sm={12} md={4}>\n          <Typography variant=\"subtitle1\" className={classes.cellNumber}>\n            {number}\n          </Typography>\n        </Grid>\n        <Grid item className={classes.finds} sm={12} md={8}>\n          {getFindContent()}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default withTheme(DayCell);\n","/** @format */\n\n// holidays format\n// {\n//   \"count\": 19,\n//   \"status\": \"ok\",\n//   \"2021-01-01\": \"New Year's Day\",\n//   \"2021-01-18\": \"MLK Jr. Birthday\",\n//   \"2021-02-15\": \"Presidents' Day\",\n//   \"2021-02-25\": \"Day Off\",\n//   \"2021-03-08\": \"Spring Break\",\n//   \"2021-03-09\": \"Spring Break\",\n//   \"2021-03-10\": \"Spring Break\",\n//   \"2021-03-11\": \"Spring Break\",\n//   \"2021-03-12\": \"Spring Break\",\n//   \"2021-05-31\": \"Memorial Day\",\n//   \"2021-07-05\": \"Independence Day\",\n//   \"2021-07-23\": \"Pioneer Day\",\n//   \"2021-09-06\": \"Labor Day\",\n//   \"2021-10-11\": \"Columbus Day\",\n//   \"2021-11-11\": \"Veterans' Day\",\n//   \"2021-11-25\": \"Thanksgiving Day\",\n//   \"2021-12-24\": \"Christmas Day\",\n//   \"2021-12-31\": \"New Year's Day\",\n//   \"2022-01-17\": \"MLK Jr. Birthday\"\n// }\n\n// convenience methods for dealing with holidays\n\nexport const isHoliday = (date, year, holidays) => {\n  try {\n    if (holidays) {\n      return buildFullDate(year, date) in holidays;\n    }\n  } catch (err) {\n    console.log(\"Error in isHoliday():\");\n    console.log(err.message);\n  }\n  return false;\n};\n\nexport const getHolidayName = (date, year, holidays) => {\n  if (!isHoliday(date, year, holidays)) {\n    return \"\";\n  }\n\n  return holidays[buildFullDate(year, date)];\n};\n\n// convenience method to concatenate the year and date into\n// the format: YYYY-MM-DD\nconst buildFullDate = (year, date) => {\n  return `${year}-${date}`;\n};\n","/** @format */\n\n// implements a week of days (7)\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DayCell from \"./DayCell\";\nimport { isHoliday, getHolidayName } from \"../infrastructure/Holidays\";\nimport { StoreContainer } from \"../infrastructure/store\";\n\n// expects a property named values that is an array containing\n// the values for each of the seven days:\n// values: [\n//    { number: '1', text: '12', subtext: 'Finds', status:'empty|used' },\n//    ...,\n// ]\nconst Week = (props) => {\n  const store = StoreContainer.useContainer();\n  const { values } = props;\n\n  const useStyles = makeStyles((theme) => ({\n    weekRoot: {\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n    day: {\n      borderColor: theme.palette.background.default,\n    },\n    today: {\n      borderColor: theme.palette.today.border,\n    },\n    holiday: {\n      borderColor: theme.palette.holiday.border,\n    },\n    unused: {\n      borderColor: theme.palette.background.default,\n    },\n    commonBorder: {\n      borderStyle: \"solid\",\n      borderWidth: \"3px\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  const dayOnClick = (cell) => {\n    if (cell.day !== \"\") {\n      store.setClickedDate(cell);\n      store.setDetailIsOpen(true);\n    }\n  };\n\n  const getDayCell = (value) => {\n    const { status, today, rawDate, index, year } = value;\n    const cell = {\n      day: rawDate,\n      offset: index,\n      today: today,\n      year: year,\n      holiday: false,\n      holidayName: \"\",\n    };\n\n    let styleName = today ? classes.today : classes.day;\n\n    if (!today && isHoliday(rawDate, year, store.holidays)) {\n      styleName = classes.holiday;\n      cell.holiday = true;\n      cell.holidayName = getHolidayName(rawDate, year, store.holidays);\n    }\n\n    if (status === \"unused\") {\n      styleName = classes.unused;\n    }\n\n    return (\n      <Grid\n        item\n        className={`${classes.commonBorder} ${styleName}`}\n        key={Math.random()}\n        xs={12}\n        onClick={() => {\n          dayOnClick(cell);\n        }}>\n        <DayCell value={value} key={Math.random()} />\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <Grid item container className={classes.weekRoot}>\n        {values.map((value) => getDayCell(value))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Week;\n","/** @format */\n\nimport * as df from \"./dates\";\n\n// contains the code used to generate the week structures used for Grid7\n\n// Parses the dates in the data to an array of week objects\n//\n// Inputs: data { dates: [], goal: integer}\n//\n// Output: [week], where week is an array of 7 day objects\nexport function getWeeks(data) {\n  const days = getDays(data);\n  return convertDaysToWeeks(days);\n}\n\n// Parses the dates into an array of day objects for use by Grid7\n// inputs:\n//\n// { dates: [], goal: integer }\n//\n// outputs:\n//\n//   days: [\n//            {\n//              number: integer (day of the month),\n//              text: string to appear in large text (find count),\n//              subtext: string to appear under the large text (\"Finds\"),\n//              status: 'unused' | 'low' | 'ok',\n//              today: true | undefined\n//            },\n//            ...\n//         ]\n//\n// the number of days are padded front and back to be a multiple of 7\nfunction getDays(data) {\n  const { dates, goal } = data;\n  let days = [];\n\n  // get day of the week of the first day (today)\n  const today = new Date();\n  const currentDoW = today.getDay();\n  const currentDoM = today.getDate();\n\n  // pad the days array with unused days before the first day\n  for (let i = 0; i < currentDoW; i++) {\n    days.push(createUnusedDay(\"\"));\n  }\n\n  // fill the array with the given days\n  for (let j = 0; j < dates.length; j++) {\n    days.push(createDayObject(dates[j], goal, currentDoM, j));\n  }\n\n  // pad the end of the array to the next multiple of seven\n  let numToPad = 7 - (days.length % 7);\n\n  // don't add blank weeks\n  if (numToPad === 7) {\n    numToPad = 0;\n  }\n\n  for (let k = 0; k < numToPad; k++) {\n    days.push(createUnusedDay(\"\"));\n  }\n\n  // setup the month toggle flags and years on every day\n  let monthFlag = false;\n  let year = today.getFullYear();\n\n  for (let i = 0, len = days.length; i < len; i++) {\n    // toggle the month flag, only if this is not the first date shown\n    if (i > 0 && days[i].first) {\n      monthFlag = !monthFlag;\n\n      // if the date is 01-01, then increment the year\n      if (days[i].rawDate === \"01-01\") {\n        year++;\n      }\n    }\n\n    days[i].monthFlag = monthFlag;\n    days[i].year = year;\n\n    // make sure only the first occurrence of \"today\" is highlighted\n    days[i].today = days[i].today && !monthFlag;\n  }\n\n  return days;\n}\n\n// Creates a date object using the information in the given date and goal\n//\n// Inputs: date in the format specified in calendar.json\n//         goal: integer goal of finds per day\n//         currentDoM: integer current day of the month\n//         index: the index of the day within the grid (0 = first day)\n//\n// Output: day object in the format:\n//   number: day of the month (first day includes month)\n//   text: findCount of the day\n//   subtext: \"Finds\"\n//   status: 'low' | 'ok' depending on the goal and findCount\n//   today: true for the current day, false otherwise\n//   first: true if the day is the 1st of the month\n//   rawDate: the original date in format MM-DD\nfunction createDayObject(date, goal, currentDoM, index) {\n  const dom = df.getDayOfMonth(date.date);\n  let result = {\n    number: dom === 1 ? df.getShortMonthName(date.date) + \" \" + dom : dom,\n    text: date.total_finds,\n    subtext: \"Finds\",\n    status: date.total_finds < goal ? \"low\" : \"ok\",\n    today: dom === currentDoM,\n    first: dom === 1,\n    rawDate: date.date,\n    index: index,\n  };\n  return result;\n}\n\n// returns an usused (aka blank) day\nfunction createUnusedDay(number) {\n  return {\n    number: number,\n    text: \"\",\n    subtext: \"\",\n    status: \"unused\",\n    today: false,\n    first: false,\n    rawDate: \"\",\n    index: -1,\n  };\n}\n\n// Converts the days array into an array of weeks, where each week is an\n// array of 7 days\n//\n// Input: array of day objects\n//\n// Output: array of week objects\n//  week: array of 7 day objects\nfunction convertDaysToWeeks(days) {\n  let weeks = [];\n\n  for (let i = 0, len = days.length; i < len; i += 7) {\n    weeks.push(days.slice(i, i + 7));\n  }\n\n  return weeks;\n}\n\n// Returns an array containing the names of the days as 3-character strings\nexport function getShortDayNames() {\n  return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n}\n","/** @format */\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    borderRadius: \"7px\",\n    backgroundColor: theme.palette.summary.background,\n  },\n  box: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  zeroReq: {\n    color: theme.palette.find.noneReq,\n  },\n  moreThanZero: {\n    color: theme.palette.find.someReq,\n  },\n  summaryFigs: {\n    textAlign: \"center\",\n  },\n  text: {\n    color: theme.palette.summary.text,\n  },\n}));\n\nexport default function SummaryCard(props) {\n  const classes = useStyles();\n  const { generated, goal, next7days } = props.summary;\n\n  return (\n    <>\n      <Card className={classes.root} variant=\"outlined\">\n        <CardContent>\n          <Box className={classes.box}>\n            <div>\n              <Typography className={classes.text}>Updated:</Typography>\n              <Typography className={classes.text}>Goal per day:</Typography>\n              <Typography className={classes.text}>Next 7 days:</Typography>\n            </div>\n            <div className={classes.summaryFigs}>\n              <Typography className={classes.text}>{generated}</Typography>\n              <Typography className={classes.text}>{goal}</Typography>\n              <Typography\n                className={\n                  next7days === 0 ? classes.zeroReq : classes.moreThanZero\n                }>\n                {next7days}\n              </Typography>\n            </div>\n          </Box>\n        </CardContent>\n      </Card>\n    </>\n  );\n}\n","/** @format */\n\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Header from \"./Header\";\nimport Week from \"./Week\";\nimport { getWeeks, getShortDayNames } from \"../infrastructure/ComposeWeeks\";\nimport SummaryCard from \"./SummaryCard\";\nimport { StoreContainer } from \"../infrastructure/store\";\nimport { DataEngine } from \"../infrastructure/DataEngine\";\n\nconst useStyles = makeStyles((/*theme*/) => ({\n  g7root: {\n    flexGrow: 1,\n    padding: \"10px\",\n  },\n  summary: {\n    paddingBottom: \"16px\",\n  },\n}));\n\nconst Grid7 = () => {\n  const store = StoreContainer.useContainer();\n  const dataEngine = DataEngine.useContainer();\n\n  // const fcd = getFindCountData(store.days, store.findData);\n  const fcd = dataEngine.getFindCountData(store.days);\n  const weeks = getWeeks({ ...fcd.data, goal: dataEngine.getGoal() });\n\n  const classes = useStyles();\n\n  let weekNum = 0;\n\n  return (\n    <>\n      <Grid container className={classes.g7root} spacing={0}>\n        <Grid item xs={12} className={classes.summary}>\n          <SummaryCard summary={fcd.summary} />\n        </Grid>\n        <Header values={getShortDayNames()} />\n        {weeks.map((week) => (\n          <Week values={week} key={weekNum++} />\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Grid7;\n","/** @format */\n\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FindCountHeader from \"./FindCountHeader\";\nimport Grid7 from \"./Grid7\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nconst FindGrid = () => {\n  return (\n    <>\n      <Grid container direction=\"column\">\n        <Grid item>\n          <FindCountHeader />\n        </Grid>\n        <Toolbar />\n        <Grid7 />\n      </Grid>\n    </>\n  );\n};\n\nexport default FindGrid;\n","/** @format */\n\n// implements the to-do list for the next week\n\nimport React from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { makeStyles, withTheme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport * as df from \"../infrastructure/dates\";\nimport { StoreContainer } from \"../infrastructure/store\";\n\nfunction NextWeek(props) {\n  const store = StoreContainer.useContainer();\n  const small = useMediaQuery(props.theme.breakpoints.down(\"sm\"));\n\n  const useStyles = makeStyles((theme) => ({\n    root: {},\n    content: {\n      minWidth: \"300px\",\n      padding: \"10px\",\n      backgroundColor: theme.palette.background.default,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.day.normBkgnd,\n      padding: \"5px\",\n    },\n    spacer: {\n      height: \"10px\",\n    },\n    gridRoot: {\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    summary: {\n      padding: \"10px\",\n      color: theme.palette.day.number,\n      backgroundColor: theme.palette.day.normBkgnd,\n    },\n    weekGrid: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n    dayCell: {},\n    dayText: {\n      padding: \"5px\",\n      color: theme.palette.day.number,\n    },\n    findText: {\n      paddingBottom: \"7px\",\n      textAlign: \"center\",\n      color: theme.palette.find.someReq,\n    },\n    findZero: {\n      color: \"transparent\",\n    },\n    dayPaper: {\n      backgroundColor: theme.palette.day.normBkgnd,\n    },\n  }));\n\n  const classes = useStyles();\n\n  const handleClose = () => {\n    store.setToDoOpen(false);\n  };\n\n  const getSummaryInfo = () => {\n    // loop over the days and generate the summary info\n    let finds = 0;\n    let days = 0;\n    const week = store.toDoWeek;\n\n    for (let i = 0; i < week.dates.length; i++) {\n      const day = week.dates[i];\n\n      if (day.total_finds < week.goal) {\n        days++;\n        finds += week.goal - day.total_finds;\n      }\n    }\n\n    return (\n      <Paper className={classes.summary}>\n        <Typography>Daily Goal: {week.goal}</Typography>\n        <Typography>Total Finds Needed This Week: {finds}</Typography>\n        <Typography>Days Needing Finds: {days}</Typography>\n      </Paper>\n    );\n  };\n\n  /* Structure of week\n      dates: Array(7)\n      0: {date: \"01-03\", findCount: 2, dayname: \"Sunday\"}\n      1: {date: \"01-04\", findCount: 7, dayname: \"Monday\"}\n      2: {date: \"01-05\", findCount: 2, dayname: \"Tuesday\"}\n      3: {date: \"01-06\", findCount: 8, dayname: \"Wednesday\"}\n      4: {date: \"01-07\", findCount: 2, dayname: \"Thursday\"}\n      5: {date: \"01-08\", findCount: 1, dayname: \"Friday\"}\n      6: {date: \"01-09\", findCount: 2, dayname: \"Saturday\"}\n      length: 7\n      __proto__: Array(0)\n      goal: 4\n      number: 7\n      startDate: \"01-03\"\n      status: \"ok\"\n  */\n\n  const getNumToFind = (finds) => {\n    if (finds < store.toDoWeek.goal) {\n      return store.toDoWeek.goal - finds;\n    } else {\n      return 0;\n    }\n  };\n\n  const getDayHeader = (day) => {\n    const width = small ? 2 : 3;\n    const dayName = day.dayname.slice(0, width);\n    const dayNum = df.getDayOfMonth(day.date);\n\n    return `${dayNum} ${dayName}`;\n  };\n\n  const getDayCell = (day) => {\n    const numToFind = getNumToFind(day.total_finds);\n\n    let findStyles = `${classes.findText}`;\n    if (numToFind === 0) {\n      findStyles = `${classes.findText} ${classes.findZero}`;\n    }\n\n    return (\n      <Grid item className={classes.dayCell} key={day.date}>\n        <Paper className={classes.dayPaper}>\n          <Typography\n            className={classes.dayText}\n            variant={\"overline\"}\n            noWrap={true}>\n            {getDayHeader(day)}\n          </Typography>\n          <Typography className={findStyles} variant=\"h5\">\n            {numToFind}\n          </Typography>\n        </Paper>\n      </Grid>\n    );\n  };\n\n  const getWeek = () => {\n    return (\n      <Grid container item className={classes.weekGrid} spacing={1} xs={12}>\n        {store.toDoWeek.dates.map((day) => getDayCell(day))}\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <Dialog\n        onClose={handleClose}\n        open={store.toDoOpen}\n        className={classes.root}>\n        <div className={classes.content}>\n          <DialogTitle id=\"nextweek\">\n            Number To Find This Week\n            <IconButton className={classes.closeButton} onClick={handleClose}>\n              <CloseIcon />\n            </IconButton>\n          </DialogTitle>\n          <Grid container className={classes.gridRoot}>\n            {getWeek()}\n            <div className={classes.spacer} />\n            {getSummaryInfo()}\n          </Grid>\n        </div>\n      </Dialog>\n    </>\n  );\n}\n\nexport default withTheme(NextWeek);\n","/** @format */\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"fontsource-roboto\";\nimport DayDetail from \"./components/DayDetail\";\nimport FindGrid from \"./components/FindGrid\";\nimport NextWeek from \"./components/NextWeek\";\nimport { StoreContainer } from \"./infrastructure/store\";\nimport { DataEngine } from \"./infrastructure/DataEngine\";\n\nconst App = () => {\n  const store = StoreContainer.useContainer();\n\n  if (!store.componentMounted || !store.dataLoaded) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <DataEngine.Provider>\n        <MuiThemeProvider theme={store.theme}>\n          <CssBaseline />\n          <FindGrid />\n          <Typography\n            align=\"right\"\n            variant=\"subtitle2\"\n            style={{ paddingRight: \"10px\" }}>\n            {store.appVersion}/{store.serverVersion}\n          </Typography>\n          <DayDetail />\n          <NextWeek />\n        </MuiThemeProvider>\n      </DataEngine.Provider>\n    </>\n  );\n};\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { StoreContainer } from \"./infrastructure/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreContainer.Provider>\n      <App />\n    </StoreContainer.Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}